
 /----------------------------------------------------------------------------\
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |  Copyright (C) 2012 - 2025  Claire Xenia Wolf <claire@yosyshq.com>         |
 |  Distributed under an ISC-like license, type "license" to see terms        |
 \----------------------------------------------------------------------------/
 Yosys 0.53+60 (git sha1 209df95fb, clang++ 18.1.8 -fPIC -O3)

-- Executing script file `-' --
[TCL: yosys -import] Command name collision: found pre-existing command `cd' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `eval' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `exec' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `read' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `trace' -> skip.

1. Executing Verilog-2005 frontend: /home/meowth/ysyx/ysyx-workbench/project/0_meopc/vsrc/ysyx_25030077_ALU.v
Parsing SystemVerilog input from `/home/meowth/ysyx/ysyx-workbench/project/0_meopc/vsrc/ysyx_25030077_ALU.v' to AST representation.
Generating RTLIL representation for module `\ysyx_25030077_ALU'.
Successfully finished Verilog frontend.

2. Executing Verilog-2005 frontend: /home/meowth/ysyx/ysyx-workbench/project/yosys-sta/scripts/../pdk/nangate45/verilog/blackbox.v
Parsing Verilog input from `/home/meowth/ysyx/ysyx-workbench/project/yosys-sta/scripts/../pdk/nangate45/verilog/blackbox.v' to AST representation.
Successfully finished Verilog frontend.

3. Executing Verilog-2005 frontend: /home/meowth/ysyx/ysyx-workbench/project/yosys-sta/scripts/../pdk/nangate45/verilog/cells_clkgate.v
Parsing Verilog input from `/home/meowth/ysyx/ysyx-workbench/project/yosys-sta/scripts/../pdk/nangate45/verilog/cells_clkgate.v' to AST representation.
Generating RTLIL representation for module `\OPENROAD_CLKGATE'.
Successfully finished Verilog frontend.

4. Executing SYNTH pass.

4.1. Executing HIERARCHY pass (managing design hierarchy).

4.1.1. Analyzing design hierarchy..
Top module:  \ysyx_25030077_ALU

4.1.2. Analyzing design hierarchy..
Top module:  \ysyx_25030077_ALU
Removing unused module `\OPENROAD_CLKGATE'.
Removed 1 unused modules.

4.2. Executing PROC pass (convert processes to netlists).

4.2.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

4.2.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

4.2.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

4.2.4. Executing PROC_INIT pass (extract init attributes).

4.2.5. Executing PROC_ARST pass (detect async resets in processes).

4.2.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

4.2.7. Executing PROC_MUX pass (convert decision trees to multiplexers).

4.2.8. Executing PROC_DLATCH pass (convert process syncs to latches).

4.2.9. Executing PROC_DFF pass (convert process syncs to FFs).

4.2.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

4.2.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

4.2.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module ysyx_25030077_ALU.

4.3. Executing FLATTEN pass (flatten design).

4.4. Executing OPT_EXPR pass (perform const folding).
Optimizing module ysyx_25030077_ALU.

4.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ysyx_25030077_ALU..
Removed 0 unused cells and 34 unused wires.
<suppressed ~1 debug messages>

4.6. Executing CHECK pass (checking for obvious problems).
Checking module ysyx_25030077_ALU...
Found and reported 0 problems.

4.7. Executing OPT pass (performing simple optimizations).

4.7.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ysyx_25030077_ALU.

4.7.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ysyx_25030077_ALU'.
Removed a total of 0 cells.

4.7.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ysyx_25030077_ALU..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~8 debug messages>

4.7.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ysyx_25030077_ALU.
Performed a total of 0 changes.

4.7.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ysyx_25030077_ALU'.
Removed a total of 0 cells.

4.7.6. Executing OPT_DFF pass (perform DFF optimizations).

4.7.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ysyx_25030077_ALU..

4.7.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module ysyx_25030077_ALU.

4.7.9. Finished OPT passes. (There is nothing left to do.)

4.8. Executing FSM pass (extract and optimize FSM).

4.8.1. Executing FSM_DETECT pass (finding FSMs in design).

4.8.2. Executing FSM_EXTRACT pass (extracting FSM from design).

4.8.3. Executing FSM_OPT pass (simple optimizations of FSMs).

4.8.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ysyx_25030077_ALU..

4.8.5. Executing FSM_OPT pass (simple optimizations of FSMs).

4.8.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

4.8.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

4.8.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

4.9. Executing OPT pass (performing simple optimizations).

4.9.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ysyx_25030077_ALU.

4.9.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ysyx_25030077_ALU'.
Removed a total of 0 cells.

4.9.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ysyx_25030077_ALU..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~8 debug messages>

4.9.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ysyx_25030077_ALU.
Performed a total of 0 changes.

4.9.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ysyx_25030077_ALU'.
Removed a total of 0 cells.

4.9.6. Executing OPT_DFF pass (perform DFF optimizations).

4.9.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ysyx_25030077_ALU..

4.9.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module ysyx_25030077_ALU.

4.9.9. Finished OPT passes. (There is nothing left to do.)

4.10. Executing WREDUCE pass (reducing word size of cells).
Removed top 15 bits (of 16) from port A of cell ysyx_25030077_ALU.$shl$/home/meowth/ysyx/ysyx-workbench/project/0_meopc/vsrc/ysyx_25030077_ALU.v:9$1 ($shl).
Removed top 5 bits (of 16) from port Y of cell ysyx_25030077_ALU.$shl$/home/meowth/ysyx/ysyx-workbench/project/0_meopc/vsrc/ysyx_25030077_ALU.v:9$1 ($shl).
Removed top 31 bits (of 63) from port A of cell ysyx_25030077_ALU.$shl$/home/meowth/ysyx/ysyx-workbench/project/0_meopc/vsrc/ysyx_25030077_ALU.v:20$11 ($shl).
Removed top 32 bits (of 33) from port B of cell ysyx_25030077_ALU.$or$/home/meowth/ysyx/ysyx-workbench/project/0_meopc/vsrc/ysyx_25030077_ALU.v:33$23 ($or).
Removed top 1 bits (of 33) from port B of cell ysyx_25030077_ALU.$or$/home/meowth/ysyx/ysyx-workbench/project/0_meopc/vsrc/ysyx_25030077_ALU.v:35$24 ($or).
Removed top 1 bits (of 33) from port B of cell ysyx_25030077_ALU.$or$/home/meowth/ysyx/ysyx-workbench/project/0_meopc/vsrc/ysyx_25030077_ALU.v:37$25 ($or).
Removed top 1 bits (of 33) from port B of cell ysyx_25030077_ALU.$or$/home/meowth/ysyx/ysyx-workbench/project/0_meopc/vsrc/ysyx_25030077_ALU.v:39$26 ($or).
Removed top 1 bits (of 33) from port B of cell ysyx_25030077_ALU.$or$/home/meowth/ysyx/ysyx-workbench/project/0_meopc/vsrc/ysyx_25030077_ALU.v:41$27 ($or).
Removed top 30 bits (of 63) from port A of cell ysyx_25030077_ALU.$or$/home/meowth/ysyx/ysyx-workbench/project/0_meopc/vsrc/ysyx_25030077_ALU.v:43$28 ($or).
Removed top 31 bits (of 63) from port B of cell ysyx_25030077_ALU.$or$/home/meowth/ysyx/ysyx-workbench/project/0_meopc/vsrc/ysyx_25030077_ALU.v:45$29 ($or).
Removed top 62 bits (of 63) from port B of cell ysyx_25030077_ALU.$or$/home/meowth/ysyx/ysyx-workbench/project/0_meopc/vsrc/ysyx_25030077_ALU.v:47$30 ($or).
Removed top 31 bits (of 63) from port Y of cell ysyx_25030077_ALU.$or$/home/meowth/ysyx/ysyx-workbench/project/0_meopc/vsrc/ysyx_25030077_ALU.v:47$30 ($or).
Removed top 31 bits (of 63) from port A of cell ysyx_25030077_ALU.$or$/home/meowth/ysyx/ysyx-workbench/project/0_meopc/vsrc/ysyx_25030077_ALU.v:47$30 ($or).
Removed top 31 bits (of 63) from port Y of cell ysyx_25030077_ALU.$or$/home/meowth/ysyx/ysyx-workbench/project/0_meopc/vsrc/ysyx_25030077_ALU.v:45$29 ($or).
Removed top 31 bits (of 63) from port A of cell ysyx_25030077_ALU.$or$/home/meowth/ysyx/ysyx-workbench/project/0_meopc/vsrc/ysyx_25030077_ALU.v:45$29 ($or).
Removed top 31 bits (of 63) from port Y of cell ysyx_25030077_ALU.$or$/home/meowth/ysyx/ysyx-workbench/project/0_meopc/vsrc/ysyx_25030077_ALU.v:43$28 ($or).
Removed top 1 bits (of 33) from port A of cell ysyx_25030077_ALU.$or$/home/meowth/ysyx/ysyx-workbench/project/0_meopc/vsrc/ysyx_25030077_ALU.v:43$28 ($or).
Removed top 31 bits (of 63) from port B of cell ysyx_25030077_ALU.$or$/home/meowth/ysyx/ysyx-workbench/project/0_meopc/vsrc/ysyx_25030077_ALU.v:43$28 ($or).
Removed top 31 bits (of 63) from mux cell ysyx_25030077_ALU.$ternary$/home/meowth/ysyx/ysyx-workbench/project/0_meopc/vsrc/ysyx_25030077_ALU.v:28$19 ($mux).
Removed top 1 bits (of 33) from port Y of cell ysyx_25030077_ALU.$or$/home/meowth/ysyx/ysyx-workbench/project/0_meopc/vsrc/ysyx_25030077_ALU.v:41$27 ($or).
Removed top 1 bits (of 33) from port A of cell ysyx_25030077_ALU.$or$/home/meowth/ysyx/ysyx-workbench/project/0_meopc/vsrc/ysyx_25030077_ALU.v:41$27 ($or).
Removed top 31 bits (of 63) from port Y of cell ysyx_25030077_ALU.$shl$/home/meowth/ysyx/ysyx-workbench/project/0_meopc/vsrc/ysyx_25030077_ALU.v:20$11 ($shl).
Removed top 1 bits (of 33) from port Y of cell ysyx_25030077_ALU.$or$/home/meowth/ysyx/ysyx-workbench/project/0_meopc/vsrc/ysyx_25030077_ALU.v:39$26 ($or).
Removed top 1 bits (of 33) from port A of cell ysyx_25030077_ALU.$or$/home/meowth/ysyx/ysyx-workbench/project/0_meopc/vsrc/ysyx_25030077_ALU.v:39$26 ($or).
Removed top 1 bits (of 33) from port Y of cell ysyx_25030077_ALU.$or$/home/meowth/ysyx/ysyx-workbench/project/0_meopc/vsrc/ysyx_25030077_ALU.v:37$25 ($or).
Removed top 1 bits (of 33) from port A of cell ysyx_25030077_ALU.$or$/home/meowth/ysyx/ysyx-workbench/project/0_meopc/vsrc/ysyx_25030077_ALU.v:37$25 ($or).
Removed top 1 bits (of 33) from port Y of cell ysyx_25030077_ALU.$or$/home/meowth/ysyx/ysyx-workbench/project/0_meopc/vsrc/ysyx_25030077_ALU.v:35$24 ($or).
Removed top 1 bits (of 33) from port A of cell ysyx_25030077_ALU.$or$/home/meowth/ysyx/ysyx-workbench/project/0_meopc/vsrc/ysyx_25030077_ALU.v:35$24 ($or).
Removed top 1 bits (of 33) from port Y of cell ysyx_25030077_ALU.$or$/home/meowth/ysyx/ysyx-workbench/project/0_meopc/vsrc/ysyx_25030077_ALU.v:33$23 ($or).
Removed top 1 bits (of 33) from port A of cell ysyx_25030077_ALU.$or$/home/meowth/ysyx/ysyx-workbench/project/0_meopc/vsrc/ysyx_25030077_ALU.v:33$23 ($or).
Removed top 1 bits (of 33) from port Y of cell ysyx_25030077_ALU.$or$/home/meowth/ysyx/ysyx-workbench/project/0_meopc/vsrc/ysyx_25030077_ALU.v:31$22 ($or).
Removed top 1 bits (of 33) from port A of cell ysyx_25030077_ALU.$or$/home/meowth/ysyx/ysyx-workbench/project/0_meopc/vsrc/ysyx_25030077_ALU.v:31$22 ($or).
Removed top 1 bits (of 33) from port B of cell ysyx_25030077_ALU.$or$/home/meowth/ysyx/ysyx-workbench/project/0_meopc/vsrc/ysyx_25030077_ALU.v:31$22 ($or).
Removed top 1 bits (of 33) from mux cell ysyx_25030077_ALU.$ternary$/home/meowth/ysyx/ysyx-workbench/project/0_meopc/vsrc/ysyx_25030077_ALU.v:21$12 ($mux).
Removed top 1 bits (of 33) from mux cell ysyx_25030077_ALU.$ternary$/home/meowth/ysyx/ysyx-workbench/project/0_meopc/vsrc/ysyx_25030077_ALU.v:22$13 ($mux).
Removed top 31 bits (of 63) from wire ysyx_25030077_ALU._GEN_5.
Removed top 1 bits (of 33) from wire ysyx_25030077_ALU._io_out_T_16.
Removed top 1 bits (of 33) from wire ysyx_25030077_ALU._io_out_T_17.
Removed top 31 bits (of 63) from wire ysyx_25030077_ALU._io_out_T_24.
Removed top 1 bits (of 33) from wire ysyx_25030077_ALU._io_out_T_32.
Removed top 5 bits (of 16) from wire ysyx_25030077_ALU.oneHot.
Removed top 31 bits (of 63) from wire ysyx_25030077_ALU.sllResult.

4.11. Executing PEEPOPT pass (run peephole optimizers).

4.12. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ysyx_25030077_ALU..
Removed 0 unused cells and 7 unused wires.
<suppressed ~1 debug messages>

4.13. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module ysyx_25030077_ALU:
  creating $macc model for $add$/home/meowth/ysyx/ysyx-workbench/project/0_meopc/vsrc/ysyx_25030077_ALU.v:10$2 ($add).
  creating $macc model for $sub$/home/meowth/ysyx/ysyx-workbench/project/0_meopc/vsrc/ysyx_25030077_ALU.v:11$3 ($sub).
  creating $alu model for $macc $sub$/home/meowth/ysyx/ysyx-workbench/project/0_meopc/vsrc/ysyx_25030077_ALU.v:11$3.
  creating $alu model for $macc $add$/home/meowth/ysyx/ysyx-workbench/project/0_meopc/vsrc/ysyx_25030077_ALU.v:10$2.
  creating $alu model for $lt$/home/meowth/ysyx/ysyx-workbench/project/0_meopc/vsrc/ysyx_25030077_ALU.v:12$4 ($lt): merged with $sub$/home/meowth/ysyx/ysyx-workbench/project/0_meopc/vsrc/ysyx_25030077_ALU.v:11$3.
  creating $alu model for $lt$/home/meowth/ysyx/ysyx-workbench/project/0_meopc/vsrc/ysyx_25030077_ALU.v:13$5 ($lt): new $alu
  creating $alu cell for $lt$/home/meowth/ysyx/ysyx-workbench/project/0_meopc/vsrc/ysyx_25030077_ALU.v:13$5: $auto$alumacc.cc:495:replace_alu$51
  creating $alu cell for $add$/home/meowth/ysyx/ysyx-workbench/project/0_meopc/vsrc/ysyx_25030077_ALU.v:10$2: $auto$alumacc.cc:495:replace_alu$58
  creating $alu cell for $sub$/home/meowth/ysyx/ysyx-workbench/project/0_meopc/vsrc/ysyx_25030077_ALU.v:11$3, $lt$/home/meowth/ysyx/ysyx-workbench/project/0_meopc/vsrc/ysyx_25030077_ALU.v:12$4: $auto$alumacc.cc:495:replace_alu$61
  created 3 $alu and 0 $macc cells.

4.14. Executing SHARE pass (SAT-based resource sharing).
Found 3 cells in module ysyx_25030077_ALU that may be considered for resource sharing.
  Analyzing resource sharing options for $sshr$/home/meowth/ysyx/ysyx-workbench/project/0_meopc/vsrc/ysyx_25030077_ALU.v:17$9 ($sshr):
    Found 1 activation_patterns using ctrl signal \oneHot [5].
    No candidates found.
  Analyzing resource sharing options for $shr$/home/meowth/ysyx/ysyx-workbench/project/0_meopc/vsrc/ysyx_25030077_ALU.v:18$10 ($shr):
    Found 1 activation_patterns using ctrl signal \oneHot [9].
    No candidates found.
  Analyzing resource sharing options for $shl$/home/meowth/ysyx/ysyx-workbench/project/0_meopc/vsrc/ysyx_25030077_ALU.v:20$11 ($shl):
    Found 1 activation_patterns using ctrl signal \oneHot [8].
    No candidates found.

4.15. Executing OPT pass (performing simple optimizations).

4.15.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ysyx_25030077_ALU.

4.15.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ysyx_25030077_ALU'.
Removed a total of 0 cells.

4.15.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ysyx_25030077_ALU..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~8 debug messages>

4.15.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ysyx_25030077_ALU.
Performed a total of 0 changes.

4.15.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ysyx_25030077_ALU'.
Removed a total of 0 cells.

4.15.6. Executing OPT_DFF pass (perform DFF optimizations).

4.15.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ysyx_25030077_ALU..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

4.15.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module ysyx_25030077_ALU.

4.15.9. Rerunning OPT passes. (Maybe there is more to do..)

4.15.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ysyx_25030077_ALU..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~8 debug messages>

4.15.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ysyx_25030077_ALU.
Performed a total of 0 changes.

4.15.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ysyx_25030077_ALU'.
Removed a total of 0 cells.

4.15.13. Executing OPT_DFF pass (perform DFF optimizations).

4.15.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ysyx_25030077_ALU..

4.15.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module ysyx_25030077_ALU.

4.15.16. Finished OPT passes. (There is nothing left to do.)

4.16. Executing MEMORY pass.

4.16.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

4.16.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

4.16.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

4.16.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

4.16.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

4.16.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ysyx_25030077_ALU..

4.16.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

4.16.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

4.16.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ysyx_25030077_ALU..

4.16.10. Executing MEMORY_COLLECT pass (generating $mem cells).

4.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ysyx_25030077_ALU..

4.18. Executing OPT pass (performing simple optimizations).

4.18.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ysyx_25030077_ALU.
<suppressed ~48 debug messages>

4.18.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ysyx_25030077_ALU'.
Removed a total of 0 cells.

4.18.3. Executing OPT_DFF pass (perform DFF optimizations).

4.18.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ysyx_25030077_ALU..
Removed 0 unused cells and 4 unused wires.
<suppressed ~1 debug messages>

4.18.5. Finished fast OPT passes.

4.19. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

4.20. Executing OPT pass (performing simple optimizations).

4.20.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ysyx_25030077_ALU.

4.20.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ysyx_25030077_ALU'.
Removed a total of 0 cells.

4.20.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ysyx_25030077_ALU..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~8 debug messages>

4.20.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ysyx_25030077_ALU.
Performed a total of 0 changes.

4.20.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ysyx_25030077_ALU'.
Removed a total of 0 cells.

4.20.6. Executing OPT_SHARE pass.

4.20.7. Executing OPT_DFF pass (perform DFF optimizations).

4.20.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ysyx_25030077_ALU..

4.20.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module ysyx_25030077_ALU.

4.20.10. Finished OPT passes. (There is nothing left to do.)

4.21. Executing TECHMAP pass (map to technology primitives).

4.21.1. Executing Verilog-2005 frontend: /home/meowth/ysyx/ysyx-workbench/project/oss-cad-suite-linux-x64-20250524/oss-cad-suite/lib/../share/yosys/techmap.v
Parsing Verilog input from `/home/meowth/ysyx/ysyx-workbench/project/oss-cad-suite-linux-x64-20250524/oss-cad-suite/lib/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu_brent_kung'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

4.21.2. Continuing TECHMAP pass.
Using template $paramod$constmap:3b7d6ac8828548b3a894399cf34931ecb937456e$paramod$b67644af347f71637e7831b7874e7e4f3fbf69ab\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod$857150d3a9b7fb38b73bbaa31ff652415e553f98\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $xor.
Using template $paramod$constmap:b9a86d073741c2a0f7bb241e73c2dd11747f3288$paramod$adfa61f2ba6b44ed6866b8ecd7b91c39c0061bd9\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshr.
Using template $paramod$constmap:b9a86d073741c2a0f7bb241e73c2dd11747f3288$paramod$56955d0f36f77738c952d3505dc563df3ee11b94\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Using template $paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$335cfd09f1afa8139c4aafcbbe5f361887b79c5e\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using extmapper simplemap for cells of type $not.
Using template $paramod$2653f68ddb8eab7b1907b4a20767b72a824a7a36\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $ne.
Using template $paramod\_90_lcu_brent_kung\WIDTH=32'00000000000000000000000000100001 for cells of type $lcu.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu_brent_kung\WIDTH=32'00000000000000000000000000100000 for cells of type $lcu.
No more expansions possible.
<suppressed ~2441 debug messages>

4.22. Executing OPT pass (performing simple optimizations).

4.22.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ysyx_25030077_ALU.
<suppressed ~120 debug messages>

4.22.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ysyx_25030077_ALU'.
<suppressed ~1179 debug messages>
Removed a total of 393 cells.

4.22.3. Executing OPT_DFF pass (perform DFF optimizations).

4.22.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ysyx_25030077_ALU..
Removed 2 unused cells and 225 unused wires.
<suppressed ~3 debug messages>

4.22.5. Finished fast OPT passes.

4.23. Executing ABC pass (technology mapping using ABC).

4.23.1. Extracting gate netlist of module `\ysyx_25030077_ALU' to `<abc-temp-dir>/input.blif'..
Extracted 1682 gates and 1751 wires to a netlist network with 68 inputs and 34 outputs.

4.23.1.1. Executing ABC.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

4.23.1.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       36
ABC RESULTS:            ANDNOT cells:      434
ABC RESULTS:               MUX cells:      475
ABC RESULTS:              NAND cells:       33
ABC RESULTS:               NOR cells:       66
ABC RESULTS:               NOT cells:       74
ABC RESULTS:                OR cells:      477
ABC RESULTS:             ORNOT cells:       25
ABC RESULTS:              XNOR cells:       37
ABC RESULTS:               XOR cells:       62
ABC RESULTS:        internal signals:     1649
ABC RESULTS:           input signals:       68
ABC RESULTS:          output signals:       34
Removing temp directory.

4.24. Executing OPT pass (performing simple optimizations).

4.24.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ysyx_25030077_ALU.
<suppressed ~246 debug messages>

4.24.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ysyx_25030077_ALU'.
Removed a total of 0 cells.

4.24.3. Executing OPT_DFF pass (perform DFF optimizations).

4.24.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ysyx_25030077_ALU..
Removed 4 unused cells and 383 unused wires.
<suppressed ~22 debug messages>

4.24.5. Finished fast OPT passes.

4.25. Executing HIERARCHY pass (managing design hierarchy).
Attribute `top' found on module `ysyx_25030077_ALU'. Setting top module to ysyx_25030077_ALU.

4.25.1. Analyzing design hierarchy..
Top module:  \ysyx_25030077_ALU

4.25.2. Analyzing design hierarchy..
Top module:  \ysyx_25030077_ALU
Removed 0 unused modules.

4.26. Printing statistics.

=== ysyx_25030077_ALU ===

   Number of wires:               1711
   Number of wire bits:           2685
   Number of public wires:          30
   Number of public wire bits:    1004
   Number of ports:                  6
   Number of port bits:            102
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1715
     $_ANDNOT_                     434
     $_AND_                         36
     $_MUX_                        475
     $_NAND_                        33
     $_NOR_                         66
     $_NOT_                         70
     $_ORNOT_                       25
     $_OR_                         477
     $_XNOR_                        37
     $_XOR_                         62

4.27. Executing CHECK pass (checking for obvious problems).
Checking module ysyx_25030077_ALU...
Found and reported 0 problems.

5. Executing AUTONAME pass.
Renamed 13770 objects in module ysyx_25030077_ALU (44 iterations).
<suppressed ~3396 debug messages>

6. Executing SPLITNETS pass (splitting up multi-bit signals).

7. Executing OPT pass (performing simple optimizations).

7.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ysyx_25030077_ALU.

7.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ysyx_25030077_ALU'.
Removed a total of 0 cells.

7.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ysyx_25030077_ALU..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

7.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ysyx_25030077_ALU.
Performed a total of 0 changes.

7.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ysyx_25030077_ALU'.
Removed a total of 0 cells.

7.6. Executing OPT_DFF pass (perform DFF optimizations).

7.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ysyx_25030077_ALU..
Removed 0 unused cells and 902 unused wires.
<suppressed ~902 debug messages>

7.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module ysyx_25030077_ALU.

7.9. Rerunning OPT passes. (Maybe there is more to do..)

7.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ysyx_25030077_ALU..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

7.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ysyx_25030077_ALU.
Performed a total of 0 changes.

7.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ysyx_25030077_ALU'.
Removed a total of 0 cells.

7.13. Executing OPT_DFF pass (perform DFF optimizations).

7.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ysyx_25030077_ALU..

7.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module ysyx_25030077_ALU.

7.16. Finished OPT passes. (There is nothing left to do.)

8. Executing CLOCK_GATE pass (extract clock gating out of flip flops).
Selected rising edge ICG \CLKGATE_X1 from Liberty file
Converted 0 FFs.
<suppressed ~24 debug messages>

9. Executing DFFLIBMAP pass (mapping DFF cells to sequential cells from liberty file).
  cell DFF_X1 (noninv, pins=4, area=4.52) is a direct match for cell type $_DFF_P_.
  cell DFFR_X1 (noninv, pins=5, area=5.32) is a direct match for cell type $_DFF_PN0_.
  cell DFFS_X1 (noninv, pins=5, area=5.32) is a direct match for cell type $_DFF_PN1_.
  cell DFFRS_X1 (noninv, pins=6, area=6.38) is a direct match for cell type $_DFFSR_PNN_.
  final dff cell mappings:
    unmapped dff cell: $_DFF_N_
    \DFF_X1 _DFF_P_ (.CK( C), .D( D), .Q( Q), .QN(~Q));
    unmapped dff cell: $_DFF_NN0_
    unmapped dff cell: $_DFF_NN1_
    unmapped dff cell: $_DFF_NP0_
    unmapped dff cell: $_DFF_NP1_
    \DFFR_X1 _DFF_PN0_ (.CK( C), .D( D), .Q( Q), .QN(~Q), .RN( R));
    \DFFS_X1 _DFF_PN1_ (.CK( C), .D( D), .Q( Q), .QN(~Q), .SN( R));
    unmapped dff cell: $_DFF_PP0_
    unmapped dff cell: $_DFF_PP1_
    unmapped dff cell: $_DFFE_NN_
    unmapped dff cell: $_DFFE_NP_
    unmapped dff cell: $_DFFE_PN_
    unmapped dff cell: $_DFFE_PP_
    unmapped dff cell: $_DFFSR_NNN_
    unmapped dff cell: $_DFFSR_NNP_
    unmapped dff cell: $_DFFSR_NPN_
    unmapped dff cell: $_DFFSR_NPP_
    \DFFRS_X1 _DFFSR_PNN_ (.CK( C), .D( D), .Q( Q), .QN(~Q), .RN( R), .SN( S));
    unmapped dff cell: $_DFFSR_PNP_
    unmapped dff cell: $_DFFSR_PPN_
    unmapped dff cell: $_DFFSR_PPP_

9.1. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).
<suppressed ~8 debug messages>
Mapping DFF cells in module `\ysyx_25030077_ALU':

10. Executing OPT pass (performing simple optimizations).

10.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ysyx_25030077_ALU.

10.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ysyx_25030077_ALU'.
Removed a total of 0 cells.

10.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ysyx_25030077_ALU..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

10.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ysyx_25030077_ALU.
Performed a total of 0 changes.

10.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ysyx_25030077_ALU'.
Removed a total of 0 cells.

10.6. Executing OPT_DFF pass (perform DFF optimizations).

10.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ysyx_25030077_ALU..

10.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module ysyx_25030077_ALU.

10.9. Finished OPT passes. (There is nothing left to do.)

11. Executing ABC pass (technology mapping using ABC).

11.1. Extracting gate netlist of module `\ysyx_25030077_ALU' to `/tmp/yosys-abc-l05yZr/input.blif'..
Extracted 1715 gates and 1783 wires to a netlist network with 68 inputs and 34 outputs.

11.1.1. Executing ABC.
Running ABC command: "/home/meowth/ysyx/ysyx-workbench/project/oss-cad-suite-linux-x64-20250524/oss-cad-suite/lib/yosys-abc" -s -f /tmp/yosys-abc-l05yZr/abc.script 2>&1
ABC: ABC command line: "source /tmp/yosys-abc-l05yZr/abc.script".
ABC: 
ABC: + read_blif /tmp/yosys-abc-l05yZr/input.blif 
ABC: + read_lib -w /home/meowth/ysyx/ysyx-workbench/project/yosys-sta/scripts/../pdk/nangate45/lib/Nangate45_typ.lib 
ABC: Parsing finished successfully.  Parsing time =     0.05 sec
ABC: Scl_LibertyReadGenlib() skipped cell "ANTENNA_X1" due to dont_use attribute.
ABC: Scl_LibertyReadGenlib() skipped cell "CLKGATETST_X1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "CLKGATETST_X2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "CLKGATETST_X4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "CLKGATETST_X8" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "CLKGATE_X1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "CLKGATE_X2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "CLKGATE_X4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "CLKGATE_X8" without logic function.
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFRS_X1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFRS_X2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFR_X1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFR_X2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFS_X1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFS_X2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_X1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_X2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLH_X1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLH_X2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLL_X1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DLL_X2".
ABC: Scl_LibertyReadGenlib() skipped cell "FILLCELL_X1" due to dont_use attribute.
ABC: Scl_LibertyReadGenlib() skipped cell "FILLCELL_X2" due to dont_use attribute.
ABC: Scl_LibertyReadGenlib() skipped cell "FILLCELL_X4" due to dont_use attribute.
ABC: Scl_LibertyReadGenlib() skipped cell "FILLCELL_X8" due to dont_use attribute.
ABC: Scl_LibertyReadGenlib() skipped cell "FILLCELL_X16" due to dont_use attribute.
ABC: Scl_LibertyReadGenlib() skipped cell "FILLCELL_X32" due to dont_use attribute.
ABC: Scl_LibertyReadGenlib() skipped cell "LOGIC0_X1" due to dont_use attribute.
ABC: Scl_LibertyReadGenlib() skipped cell "LOGIC1_X1" due to dont_use attribute.
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFRS_X1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFRS_X2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFR_X1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFR_X2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFS_X1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFFS_X2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFF_X1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "SDFF_X2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUF_X1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUF_X2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUF_X4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUF_X8".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUF_X16".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TINV_X1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "TLAT_X1".
ABC: Library "NangateOpenCellLibrary" from "/home/meowth/ysyx/ysyx-workbench/project/yosys-sta/scripts/../pdk/nangate45/lib/Nangate45_typ.lib" has 90 cells (35 skipped: 21 seq; 6 tri-state; 8 no func; 9 dont_use).  Time =     0.07 sec
ABC: Memory =   11.38 MB. Time =     0.07 sec
ABC: Warning: Detected 2 multi-output gates (for example, "FA_X1").
ABC: + strash 
ABC: + ifraig 
ABC: + retime -D 2000.0 -M 6 
ABC: + strash 
ABC: + dch -f 
ABC: + map -p -M 1 -D 2000.0 -f 
ABC: + topo 
ABC: + dnsize 
ABC: + buffer -p 
ABC: + upsize 
ABC: + 
ABC: + write_blif /tmp/yosys-abc-l05yZr/output.blif 

11.1.2. Re-integrating ABC results.
ABC RESULTS:           AND2_X1 cells:      110
ABC RESULTS:           AND2_X2 cells:        8
ABC RESULTS:           AND2_X4 cells:        7
ABC RESULTS:           AND3_X1 cells:       86
ABC RESULTS:           AND3_X2 cells:        1
ABC RESULTS:           AND3_X4 cells:        1
ABC RESULTS:           AND4_X1 cells:       15
ABC RESULTS:           AND4_X2 cells:        1
ABC RESULTS:           AND4_X4 cells:        2
ABC RESULTS:         AOI211_X1 cells:       22
ABC RESULTS:         AOI211_X2 cells:        1
ABC RESULTS:          AOI21_X1 cells:      224
ABC RESULTS:          AOI21_X2 cells:        9
ABC RESULTS:          AOI21_X4 cells:        3
ABC RESULTS:         AOI221_X1 cells:        1
ABC RESULTS:         AOI221_X2 cells:        1
ABC RESULTS:         AOI221_X4 cells:        3
ABC RESULTS:          AOI22_X1 cells:       14
ABC RESULTS:           BUF_X16 cells:        2
ABC RESULTS:            BUF_X2 cells:       25
ABC RESULTS:            BUF_X4 cells:       58
ABC RESULTS:            BUF_X8 cells:        3
ABC RESULTS:            INV_X1 cells:      152
ABC RESULTS:            INV_X2 cells:        4
ABC RESULTS:            INV_X4 cells:        2
ABC RESULTS:           MUX2_X1 cells:       96
ABC RESULTS:           MUX2_X2 cells:        4
ABC RESULTS:          NAND2_X1 cells:      136
ABC RESULTS:          NAND2_X2 cells:        3
ABC RESULTS:          NAND2_X4 cells:        2
ABC RESULTS:          NAND3_X1 cells:      154
ABC RESULTS:          NAND3_X2 cells:        6
ABC RESULTS:          NAND3_X4 cells:        1
ABC RESULTS:          NAND4_X1 cells:       37
ABC RESULTS:          NAND4_X4 cells:        2
ABC RESULTS:           NOR2_X1 cells:      133
ABC RESULTS:           NOR2_X2 cells:        5
ABC RESULTS:           NOR2_X4 cells:       11
ABC RESULTS:           NOR3_X1 cells:       40
ABC RESULTS:           NOR3_X4 cells:        2
ABC RESULTS:           NOR4_X1 cells:       12
ABC RESULTS:           NOR4_X2 cells:        1
ABC RESULTS:           NOR4_X4 cells:        2
ABC RESULTS:         OAI211_X1 cells:      106
ABC RESULTS:         OAI211_X2 cells:        6
ABC RESULTS:          OAI21_X1 cells:      203
ABC RESULTS:          OAI21_X2 cells:        2
ABC RESULTS:         OAI221_X1 cells:        9
ABC RESULTS:          OAI22_X1 cells:        2
ABC RESULTS:            OR2_X1 cells:       22
ABC RESULTS:            OR2_X2 cells:        1
ABC RESULTS:            OR2_X4 cells:        4
ABC RESULTS:            OR3_X1 cells:       44
ABC RESULTS:            OR3_X2 cells:        1
ABC RESULTS:            OR3_X4 cells:        6
ABC RESULTS:            OR4_X1 cells:        7
ABC RESULTS:            OR4_X2 cells:        3
ABC RESULTS:            OR4_X4 cells:        1
ABC RESULTS:          XNOR2_X1 cells:        7
ABC RESULTS:           XOR2_X1 cells:       16
ABC RESULTS:           XOR2_X2 cells:        3
ABC RESULTS:        internal signals:     1681
ABC RESULTS:           input signals:       68
ABC RESULTS:          output signals:       34
Removing temp directory.

12. Executing HILOMAP pass (mapping to constant drivers).

13. Executing SETUNDEF pass (replace undef values with defined constants).

14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ysyx_25030077_ALU..
Removed 0 unused cells and 1783 unused wires.
<suppressed ~1682 debug messages>

15. Executing Liberty frontend: /home/meowth/ysyx/ysyx-workbench/project/yosys-sta/scripts/../pdk/nangate45/lib/Nangate45_typ.lib
Imported 134 cell types from liberty file.

16. Executing CHECK pass (checking for obvious problems).
Checking module ysyx_25030077_ALU...
Found and reported 0 problems.

17. Printing statistics.

=== ysyx_25030077_ALU ===

   Number of wires:               1913
   Number of wire bits:           1913
   Number of public wires:         102
   Number of public wire bits:     102
   Number of ports:                102
   Number of port bits:            102
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1845
     AND2_X1                       110
     AND2_X2                         8
     AND2_X4                         7
     AND3_X1                        86
     AND3_X2                         1
     AND3_X4                         1
     AND4_X1                        15
     AND4_X2                         1
     AND4_X4                         2
     AOI211_X1                      22
     AOI211_X2                       1
     AOI21_X1                      224
     AOI21_X2                        9
     AOI21_X4                        3
     AOI221_X1                       1
     AOI221_X2                       1
     AOI221_X4                       3
     AOI22_X1                       14
     BUF_X16                         2
     BUF_X2                         25
     BUF_X4                         58
     BUF_X8                          3
     INV_X1                        152
     INV_X2                          4
     INV_X4                          2
     MUX2_X1                        96
     MUX2_X2                         4
     NAND2_X1                      136
     NAND2_X2                        3
     NAND2_X4                        2
     NAND3_X1                      154
     NAND3_X2                        6
     NAND3_X4                        1
     NAND4_X1                       37
     NAND4_X4                        2
     NOR2_X1                       133
     NOR2_X2                         5
     NOR2_X4                        11
     NOR3_X1                        40
     NOR3_X4                         2
     NOR4_X1                        12
     NOR4_X2                         1
     NOR4_X4                         2
     OAI211_X1                     106
     OAI211_X2                       6
     OAI21_X1                      203
     OAI21_X2                        2
     OAI221_X1                       9
     OAI22_X1                        2
     OR2_X1                         22
     OR2_X2                          1
     OR2_X4                          4
     OR3_X1                         44
     OR3_X2                          1
     OR3_X4                          6
     OR4_X1                          7
     OR4_X2                          3
     OR4_X4                          1
     XNOR2_X1                        7
     XOR2_X1                        16
     XOR2_X2                         3

   Chip area for module '\ysyx_25030077_ALU': 2199.820000
     of which used for sequential elements: 0.000000 (0.00%)

18. Executing Verilog backend.
Dumping module `\ysyx_25030077_ALU'.

End of script. Logfile hash: b43cf8c84c, CPU: user 1.04s system 0.03s, MEM: 40.00 MB peak
Yosys 0.53+60 (git sha1 209df95fb, clang++ 18.1.8 -fPIC -O3)
Time spent: 45% 2x abc (0 sec), 10% 31x opt_expr (0 sec), ...
