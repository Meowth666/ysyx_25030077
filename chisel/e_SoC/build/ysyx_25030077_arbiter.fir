circuit ysyx_25030077_arbiter :
  module ysyx_25030077_arbiter :
    input clock : Clock
    input reset : UInt<1>
    output io : { flip ifu_valid : UInt<1>, flip pc : UInt<32>, flip rs1_data : UInt<32>, flip rs2_data : UInt<32>, flip imm : UInt<32>, flip r_mask : UInt<3>, flip w_mask : UInt<3>, axi_ar_valid : UInt<1>, axi_ar_addr : UInt<32>, flip axi_ar_ready : UInt<1>, axi_ar_id : UInt<4>, axi_ar_len : UInt<8>, axi_ar_size : UInt<3>, axi_ar_burst : UInt<2>, axi_aw_valid : UInt<1>, axi_aw_addr : UInt<32>, flip axi_aw_ready : UInt<1>, axi_aw_id : UInt<4>, axi_aw_len : UInt<8>, axi_aw_size : UInt<3>, axi_aw_burst : UInt<2>, axi_w_valid : UInt<1>, axi_w_data : UInt<32>, axi_w_strb : UInt<3>, flip axi_w_ready : UInt<1>, axi_w_last : UInt<1>, flip axi_r_valid : UInt<1>, flip axi_r_data : UInt<32>, axi_r_ready : UInt<1>, flip axi_r_resp : UInt<2>, flip axi_r_id : UInt<4>, flip axi_r_last : UInt<1>, flip axi_b_valid : UInt<1>, axi_b_ready : UInt<1>, flip axi_b_resp : UInt<2>, flip axi_b_id : UInt<4>, gpr_b_resp : UInt<2>, gpr_r_valid : UInt<1>, gpr_b_valid : UInt<1>, flip gpr_r_ready : UInt<1>, flip gpr_b_ready : UInt<1>, gpr_data : UInt<32>, inst : UInt<32>, ifu_ready : UInt<1>, flip r_valid_lsu : UInt<1>}

    io.axi_aw_id <= UInt<1>("h0") @[ysyx_25030077_arbiter.scala 60:18]
    io.axi_aw_len <= UInt<1>("h0") @[ysyx_25030077_arbiter.scala 61:19]
    io.axi_aw_size <= UInt<1>("h0") @[ysyx_25030077_arbiter.scala 62:20]
    io.axi_aw_burst <= UInt<1>("h0") @[ysyx_25030077_arbiter.scala 63:21]
    io.axi_w_last <= UInt<1>("h0") @[ysyx_25030077_arbiter.scala 65:19]
    io.axi_ar_id <= UInt<1>("h0") @[ysyx_25030077_arbiter.scala 67:18]
    io.axi_ar_len <= UInt<1>("h0") @[ysyx_25030077_arbiter.scala 68:19]
    io.axi_ar_size <= UInt<1>("h0") @[ysyx_25030077_arbiter.scala 69:20]
    io.axi_ar_burst <= UInt<1>("h0") @[ysyx_25030077_arbiter.scala 70:21]
    reg state_reg : UInt<2>, clock with :
      reset => (reset, UInt<2>("h0")) @[ysyx_25030077_arbiter.scala 73:28]
    reg inst_reg : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[ysyx_25030077_arbiter.scala 74:27]
    reg axi_r_valid_delay : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[ysyx_25030077_arbiter.scala 75:36]
    node _io_axi_ar_addr_T = add(io.rs1_data, io.imm) @[ysyx_25030077_arbiter.scala 77:44]
    node _io_axi_ar_addr_T_1 = bits(_io_axi_ar_addr_T, 31, 0) @[ysyx_25030077_arbiter.scala 77:54]
    node _io_axi_ar_addr_T_2 = eq(state_reg, UInt<1>("h0")) @[ysyx_25030077_arbiter.scala 78:42]
    node _io_axi_ar_addr_T_3 = mux(_io_axi_ar_addr_T_2, io.pc, _io_axi_ar_addr_T_1) @[Mux.scala 101:16]
    io.axi_ar_addr <= _io_axi_ar_addr_T_3 @[ysyx_25030077_arbiter.scala 77:20]
    axi_r_valid_delay <= io.axi_r_valid @[ysyx_25030077_arbiter.scala 80:23]
    node _state_reg_T = eq(state_reg, UInt<1>("h0")) @[ysyx_25030077_arbiter.scala 82:20]
    node _state_reg_T_1 = eq(io.axi_r_valid, UInt<1>("h1")) @[ysyx_25030077_arbiter.scala 82:51]
    node _state_reg_T_2 = mux(_state_reg_T_1, UInt<1>("h1"), UInt<1>("h0")) @[ysyx_25030077_arbiter.scala 82:35]
    node _state_reg_T_3 = eq(state_reg, UInt<1>("h1")) @[ysyx_25030077_arbiter.scala 83:20]
    node _state_reg_T_4 = eq(io.r_valid_lsu, UInt<1>("h1")) @[ysyx_25030077_arbiter.scala 84:53]
    node _state_reg_T_5 = eq(io.axi_r_valid, UInt<1>("h1")) @[ysyx_25030077_arbiter.scala 84:89]
    node _state_reg_T_6 = eq(axi_r_valid_delay, UInt<1>("h0")) @[ysyx_25030077_arbiter.scala 84:119]
    node _state_reg_T_7 = and(_state_reg_T_5, _state_reg_T_6) @[ysyx_25030077_arbiter.scala 84:98]
    node _state_reg_T_8 = mux(_state_reg_T_7, UInt<2>("h2"), UInt<1>("h1")) @[ysyx_25030077_arbiter.scala 84:71]
    node _state_reg_T_9 = eq(io.r_valid_lsu, UInt<1>("h0")) @[ysyx_25030077_arbiter.scala 85:53]
    node _state_reg_T_10 = and(io.axi_r_valid, io.axi_ar_ready) @[ysyx_25030077_arbiter.scala 85:88]
    node _state_reg_T_11 = mux(_state_reg_T_10, UInt<2>("h2"), UInt<1>("h1")) @[ysyx_25030077_arbiter.scala 85:72]
    node _state_reg_T_12 = mux(_state_reg_T_9, _state_reg_T_11, UInt<1>("h0")) @[Mux.scala 101:16]
    node _state_reg_T_13 = mux(_state_reg_T_4, _state_reg_T_8, _state_reg_T_12) @[Mux.scala 101:16]
    node _state_reg_T_14 = eq(state_reg, UInt<2>("h2")) @[ysyx_25030077_arbiter.scala 87:20]
    node _state_reg_T_15 = and(io.axi_r_valid, io.axi_ar_ready) @[ysyx_25030077_arbiter.scala 87:51]
    node _state_reg_T_16 = mux(_state_reg_T_15, UInt<1>("h0"), UInt<2>("h2")) @[ysyx_25030077_arbiter.scala 87:35]
    node _state_reg_T_17 = mux(_state_reg_T_14, _state_reg_T_16, UInt<1>("h0")) @[Mux.scala 101:16]
    node _state_reg_T_18 = mux(_state_reg_T_3, _state_reg_T_13, _state_reg_T_17) @[Mux.scala 101:16]
    node _state_reg_T_19 = mux(_state_reg_T, _state_reg_T_2, _state_reg_T_18) @[Mux.scala 101:16]
    state_reg <= _state_reg_T_19 @[ysyx_25030077_arbiter.scala 81:15]
    node _io_axi_aw_addr_T = eq(state_reg, UInt<1>("h1")) @[ysyx_25030077_arbiter.scala 91:42]
    node _io_axi_aw_addr_T_1 = add(io.rs1_data, io.imm) @[ysyx_25030077_arbiter.scala 91:67]
    node _io_axi_aw_addr_T_2 = bits(_io_axi_aw_addr_T_1, 31, 0) @[ysyx_25030077_arbiter.scala 91:77]
    node _io_axi_aw_addr_T_3 = mux(_io_axi_aw_addr_T, _io_axi_aw_addr_T_2, UInt<1>("h0")) @[Mux.scala 101:16]
    io.axi_aw_addr <= _io_axi_aw_addr_T_3 @[ysyx_25030077_arbiter.scala 90:20]
    node _io_axi_aw_valid_T = eq(state_reg, UInt<1>("h1")) @[ysyx_25030077_arbiter.scala 94:42]
    node _io_axi_aw_valid_T_1 = mux(_io_axi_aw_valid_T, io.axi_r_valid, UInt<1>("h0")) @[Mux.scala 101:16]
    io.axi_aw_valid <= _io_axi_aw_valid_T_1 @[ysyx_25030077_arbiter.scala 93:21]
    node _io_axi_ar_valid_T = eq(state_reg, UInt<1>("h0")) @[ysyx_25030077_arbiter.scala 97:42]
    node _io_axi_ar_valid_T_1 = eq(state_reg, UInt<1>("h1")) @[ysyx_25030077_arbiter.scala 98:42]
    node _io_axi_ar_valid_T_2 = mux(_io_axi_ar_valid_T_1, io.axi_r_valid, UInt<1>("h0")) @[Mux.scala 101:16]
    node _io_axi_ar_valid_T_3 = mux(_io_axi_ar_valid_T, io.ifu_valid, _io_axi_ar_valid_T_2) @[Mux.scala 101:16]
    io.axi_ar_valid <= _io_axi_ar_valid_T_3 @[ysyx_25030077_arbiter.scala 96:21]
    node _io_axi_w_valid_T = eq(state_reg, UInt<1>("h1")) @[ysyx_25030077_arbiter.scala 105:42]
    node _io_axi_w_valid_T_1 = mux(_io_axi_w_valid_T, io.axi_r_valid, UInt<1>("h0")) @[Mux.scala 101:16]
    io.axi_w_valid <= _io_axi_w_valid_T_1 @[ysyx_25030077_arbiter.scala 104:21]
    node _io_axi_w_data_T = eq(state_reg, UInt<1>("h1")) @[ysyx_25030077_arbiter.scala 108:42]
    node _io_axi_w_data_T_1 = mux(_io_axi_w_data_T, io.rs2_data, UInt<1>("h0")) @[Mux.scala 101:16]
    io.axi_w_data <= _io_axi_w_data_T_1 @[ysyx_25030077_arbiter.scala 107:21]
    node _io_axi_w_strb_T = eq(state_reg, UInt<1>("h1")) @[ysyx_25030077_arbiter.scala 111:42]
    node _io_axi_w_strb_T_1 = mux(_io_axi_w_strb_T, io.w_mask, UInt<1>("h0")) @[Mux.scala 101:16]
    io.axi_w_strb <= _io_axi_w_strb_T_1 @[ysyx_25030077_arbiter.scala 110:21]
    io.axi_r_ready <= io.gpr_r_ready @[ysyx_25030077_arbiter.scala 114:21]
    io.axi_b_ready <= io.gpr_b_ready @[ysyx_25030077_arbiter.scala 115:21]
    io.ifu_ready <= io.axi_ar_ready @[ysyx_25030077_arbiter.scala 116:21]
    node _io_gpr_r_valid_T = eq(state_reg, UInt<2>("h2")) @[ysyx_25030077_arbiter.scala 119:42]
    node _io_gpr_r_valid_T_1 = mux(_io_gpr_r_valid_T, io.axi_r_valid, UInt<1>("h0")) @[Mux.scala 101:16]
    io.gpr_r_valid <= _io_gpr_r_valid_T_1 @[ysyx_25030077_arbiter.scala 118:21]
    node _io_gpr_b_valid_T = eq(state_reg, UInt<2>("h2")) @[ysyx_25030077_arbiter.scala 122:42]
    node _io_gpr_b_valid_T_1 = mux(_io_gpr_b_valid_T, io.axi_b_valid, UInt<1>("h0")) @[Mux.scala 101:16]
    io.gpr_b_valid <= _io_gpr_b_valid_T_1 @[ysyx_25030077_arbiter.scala 121:21]
    node _io_gpr_b_resp_T = eq(state_reg, UInt<2>("h2")) @[ysyx_25030077_arbiter.scala 125:42]
    node _io_gpr_b_resp_T_1 = mux(_io_gpr_b_resp_T, io.axi_b_resp, UInt<1>("h0")) @[Mux.scala 101:16]
    io.gpr_b_resp <= _io_gpr_b_resp_T_1 @[ysyx_25030077_arbiter.scala 124:21]
    node _io_gpr_data_T = eq(state_reg, UInt<2>("h2")) @[ysyx_25030077_arbiter.scala 128:42]
    node _io_gpr_data_T_1 = mux(_io_gpr_data_T, io.axi_r_data, UInt<1>("h0")) @[Mux.scala 101:16]
    io.gpr_data <= _io_gpr_data_T_1 @[ysyx_25030077_arbiter.scala 127:21]
    node _inst_reg_T = eq(io.axi_r_valid, UInt<1>("h1")) @[ysyx_25030077_arbiter.scala 131:47]
    node _inst_reg_T_1 = eq(state_reg, UInt<1>("h0")) @[ysyx_25030077_arbiter.scala 131:68]
    node _inst_reg_T_2 = and(_inst_reg_T, _inst_reg_T_1) @[ysyx_25030077_arbiter.scala 131:55]
    node _inst_reg_T_3 = mux(_inst_reg_T_2, io.axi_r_data, inst_reg) @[Mux.scala 101:16]
    inst_reg <= _inst_reg_T_3 @[ysyx_25030077_arbiter.scala 130:22]
    io.inst <= inst_reg @[ysyx_25030077_arbiter.scala 133:21]

