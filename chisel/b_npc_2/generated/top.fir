circuit top :
  module addr_gen :
    input clock : Clock
    input reset : Reset
    output io : { flip addr_in : UInt<32>, IFUReq : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>}}}

    reg addr_state : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[addr_gen.scala 12:27]
    reg dataReg : UInt<32>, clock with :
      reset => (reset, UInt<32>("h413")) @[addr_gen.scala 15:24]
    node _dataReg_T = eq(addr_state, UInt<1>("h0")) @[addr_gen.scala 17:30]
    node _dataReg_T_1 = mux(_dataReg_T, io.addr_in, dataReg) @[addr_gen.scala 17:17]
    dataReg <= _dataReg_T_1 @[addr_gen.scala 17:11]
    node _addr_state_T = mux(io.IFUReq.ready, UInt<1>("h0"), UInt<1>("h1")) @[addr_gen.scala 22:27]
    node _addr_state_T_1 = eq(UInt<1>("h1"), addr_state) @[Mux.scala 81:61]
    node _addr_state_T_2 = mux(_addr_state_T_1, _addr_state_T, UInt<1>("h1")) @[Mux.scala 81:58]
    addr_state <= _addr_state_T_2 @[addr_gen.scala 20:14]
    node _io_IFUReq_valid_T = eq(addr_state, UInt<1>("h1")) @[addr_gen.scala 26:34]
    io.IFUReq.valid <= _io_IFUReq_valid_T @[addr_gen.scala 26:19]
    io.IFUReq.bits.addr <= dataReg @[addr_gen.scala 27:23]

  module IFU :
    input clock : Clock
    input reset : Reset
    output io : { flip addr_Req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>}}, sramReq : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>}}}

    reg state : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[IFU.scala 12:22]
    reg addrReg : UInt<32>, clock with :
      reset => (reset, UInt<32>("h413")) @[IFU.scala 15:24]
    node _addrReg_T = mux(io.addr_Req.valid, io.addr_Req.bits.addr, addrReg) @[IFU.scala 18:17]
    addrReg <= _addrReg_T @[IFU.scala 18:11]
    node _state_T = mux(io.sramReq.ready, UInt<1>("h0"), UInt<1>("h1")) @[IFU.scala 23:24]
    node _state_T_1 = eq(UInt<1>("h1"), state) @[Mux.scala 81:61]
    node _state_T_2 = mux(_state_T_1, _state_T, UInt<1>("h1")) @[Mux.scala 81:58]
    state <= _state_T_2 @[IFU.scala 21:9]
    node _io_sramReq_valid_T = eq(state, UInt<1>("h1")) @[IFU.scala 27:30]
    io.sramReq.valid <= _io_sramReq_valid_T @[IFU.scala 27:20]
    io.sramReq.bits.addr <= addrReg @[IFU.scala 28:24]
    node _io_addr_Req_ready_T = eq(state, UInt<1>("h1")) @[IFU.scala 30:31]
    io.addr_Req.ready <= _io_addr_Req_ready_T @[IFU.scala 30:21]

  module SRAM :
    input clock : Clock
    input reset : Reset
    output io : { flip req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>}}, iduReq : { flip ready : UInt<1>, valid : UInt<1>, bits : { inst : UInt<32>, pc : UInt<32>}}}

    reg state_ram : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[SRAM.scala 12:26]
    reg instReg : UInt<32>, clock with :
      reset => (reset, UInt<32>("h413")) @[SRAM.scala 15:24]
    reg pcReg : UInt<32>, clock with :
      reset => (reset, UInt<32>("h413")) @[SRAM.scala 16:24]
    node _instReg_T = mux(io.req.valid, io.req.bits.addr, instReg) @[SRAM.scala 18:17]
    instReg <= _instReg_T @[SRAM.scala 18:11]
    node _pcReg_T = mux(io.req.valid, io.req.bits.addr, pcReg) @[SRAM.scala 19:15]
    pcReg <= _pcReg_T @[SRAM.scala 19:9]
    node _state_ram_T = mux(io.iduReq.ready, UInt<1>("h0"), UInt<1>("h1")) @[SRAM.scala 24:17]
    node _state_ram_T_1 = eq(UInt<1>("h1"), state_ram) @[Mux.scala 81:61]
    node _state_ram_T_2 = mux(_state_ram_T_1, _state_ram_T, UInt<1>("h1")) @[Mux.scala 81:58]
    state_ram <= _state_ram_T_2 @[SRAM.scala 22:13]
    node _io_req_ready_T = eq(state_ram, UInt<1>("h1")) @[SRAM.scala 27:30]
    io.req.ready <= _io_req_ready_T @[SRAM.scala 27:16]
    io.iduReq.bits.inst <= instReg @[SRAM.scala 29:23]
    io.iduReq.bits.pc <= pcReg @[SRAM.scala 30:21]
    node _io_iduReq_valid_T = eq(state_ram, UInt<1>("h1")) @[SRAM.scala 32:33]
    io.iduReq.valid <= _io_iduReq_valid_T @[SRAM.scala 32:19]

  module IDU :
    input clock : Clock
    input reset : Reset
    output io : { flip inst_req : { flip ready : UInt<1>, valid : UInt<1>, bits : { inst : UInt<32>, pc : UInt<32>}}, imm_type : UInt<3>, rs1 : UInt<5>, rs2 : UInt<5>, rd : UInt<5>, data_control : UInt<3>, ALU_ctrl : UInt<4>, pc_next_type : UInt<4>, instruction_o : UInt<32>, pc_o : UInt<32>}

    reg state_idu : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[IDU.scala 19:26]
    reg inst_reg : UInt<32>, clock with :
      reset => (reset, UInt<32>("h413")) @[IDU.scala 21:25]
    reg pc_reg : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[IDU.scala 22:24]
    reg imm_type_reg_o : UInt<3>, clock with :
      reset => (reset, UInt<3>("h0")) @[IDU.scala 23:31]
    reg rs1_reg_o : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[IDU.scala 24:26]
    reg rs2_reg_o : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[IDU.scala 25:26]
    reg rd_reg_o : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[IDU.scala 26:25]
    reg ALU_ctrl_reg_o : UInt<4>, clock with :
      reset => (reset, UInt<4>("h0")) @[IDU.scala 27:31]
    reg data_control_reg_o : UInt<3>, clock with :
      reset => (reset, UInt<3>("h0")) @[IDU.scala 28:35]
    reg pc_next_type_reg_o : UInt<4>, clock with :
      reset => (reset, UInt<4>("h0")) @[IDU.scala 29:35]
    node addi_Rs1 = bits(io.inst_req.bits.inst, 19, 15) @[IDU.scala 41:39]
    node addi_Rd = bits(io.inst_req.bits.inst, 11, 7) @[IDU.scala 42:39]
    node xori_Rs1 = bits(io.inst_req.bits.inst, 19, 15) @[IDU.scala 47:39]
    node xori_Rd = bits(io.inst_req.bits.inst, 11, 7) @[IDU.scala 48:39]
    node ori_Rs1 = bits(io.inst_req.bits.inst, 19, 15) @[IDU.scala 53:38]
    node ori_Rd = bits(io.inst_req.bits.inst, 11, 7) @[IDU.scala 54:38]
    node andi_Rs1 = bits(io.inst_req.bits.inst, 19, 15) @[IDU.scala 59:39]
    node andi_Rd = bits(io.inst_req.bits.inst, 11, 7) @[IDU.scala 60:39]
    node csrrw_Rs1 = bits(io.inst_req.bits.inst, 19, 15) @[IDU.scala 65:40]
    node csrrw_Rd = bits(io.inst_req.bits.inst, 11, 7) @[IDU.scala 66:40]
    node csrrs_Rs1 = bits(io.inst_req.bits.inst, 19, 15) @[IDU.scala 71:40]
    node csrrs_Rd = bits(io.inst_req.bits.inst, 11, 7) @[IDU.scala 72:40]
    node srai_Rs1 = bits(io.inst_req.bits.inst, 19, 15) @[IDU.scala 77:39]
    node srai_Rd = bits(io.inst_req.bits.inst, 11, 7) @[IDU.scala 78:39]
    node srli_Rs1 = bits(io.inst_req.bits.inst, 19, 15) @[IDU.scala 83:39]
    node srli_Rd = bits(io.inst_req.bits.inst, 11, 7) @[IDU.scala 84:39]
    node slli_Rs1 = bits(io.inst_req.bits.inst, 19, 15) @[IDU.scala 89:39]
    node slli_Rd = bits(io.inst_req.bits.inst, 11, 7) @[IDU.scala 90:39]
    node sltiu_Rs1 = bits(io.inst_req.bits.inst, 19, 15) @[IDU.scala 95:40]
    node sltiu_Rd = bits(io.inst_req.bits.inst, 11, 7) @[IDU.scala 96:40]
    node slti_Rs1 = bits(io.inst_req.bits.inst, 19, 15) @[IDU.scala 101:39]
    node slti_Rd = bits(io.inst_req.bits.inst, 11, 7) @[IDU.scala 102:39]
    node sltu_Rs1 = bits(io.inst_req.bits.inst, 19, 15) @[IDU.scala 106:39]
    node sltu_Rs2 = bits(io.inst_req.bits.inst, 24, 20) @[IDU.scala 107:40]
    node sltu_Rd = bits(io.inst_req.bits.inst, 11, 7) @[IDU.scala 108:39]
    node slt_Rs1 = bits(io.inst_req.bits.inst, 19, 15) @[IDU.scala 113:38]
    node slt_Rs2 = bits(io.inst_req.bits.inst, 24, 20) @[IDU.scala 114:39]
    node slt_Rd = bits(io.inst_req.bits.inst, 11, 7) @[IDU.scala 115:38]
    node add_Rs1 = bits(io.inst_req.bits.inst, 19, 15) @[IDU.scala 121:38]
    node add_Rs2 = bits(io.inst_req.bits.inst, 24, 20) @[IDU.scala 122:38]
    node add_Rd = bits(io.inst_req.bits.inst, 11, 7) @[IDU.scala 123:38]
    node and_Rs1 = bits(io.inst_req.bits.inst, 19, 15) @[IDU.scala 128:38]
    node and_Rs2 = bits(io.inst_req.bits.inst, 24, 20) @[IDU.scala 129:38]
    node and_Rd = bits(io.inst_req.bits.inst, 11, 7) @[IDU.scala 130:38]
    node sll_Rs1 = bits(io.inst_req.bits.inst, 19, 15) @[IDU.scala 135:38]
    node sll_Rs2 = bits(io.inst_req.bits.inst, 24, 20) @[IDU.scala 136:38]
    node sll_Rd = bits(io.inst_req.bits.inst, 11, 7) @[IDU.scala 137:38]
    node sra_Rs1 = bits(io.inst_req.bits.inst, 19, 15) @[IDU.scala 142:38]
    node sra_Rs2 = bits(io.inst_req.bits.inst, 24, 20) @[IDU.scala 143:38]
    node sra_Rd = bits(io.inst_req.bits.inst, 11, 7) @[IDU.scala 144:38]
    node srl_Rs1 = bits(io.inst_req.bits.inst, 19, 15) @[IDU.scala 149:38]
    node srl_Rs2 = bits(io.inst_req.bits.inst, 24, 20) @[IDU.scala 150:38]
    node srl_Rd = bits(io.inst_req.bits.inst, 11, 7) @[IDU.scala 151:38]
    node xor_Rs1 = bits(io.inst_req.bits.inst, 19, 15) @[IDU.scala 156:38]
    node xor_Rs2 = bits(io.inst_req.bits.inst, 24, 20) @[IDU.scala 157:38]
    node xor_Rd = bits(io.inst_req.bits.inst, 11, 7) @[IDU.scala 158:38]
    node or_Rs1 = bits(io.inst_req.bits.inst, 19, 15) @[IDU.scala 163:37]
    node or_Rs2 = bits(io.inst_req.bits.inst, 24, 20) @[IDU.scala 164:37]
    node or_Rd = bits(io.inst_req.bits.inst, 11, 7) @[IDU.scala 165:37]
    node sub_Rs1 = bits(io.inst_req.bits.inst, 19, 15) @[IDU.scala 170:38]
    node sub_Rs2 = bits(io.inst_req.bits.inst, 24, 20) @[IDU.scala 171:38]
    node sub_Rd = bits(io.inst_req.bits.inst, 11, 7) @[IDU.scala 172:38]
    node lui_Rd = bits(io.inst_req.bits.inst, 11, 7) @[IDU.scala 177:38]
    node auipc_Rd = bits(io.inst_req.bits.inst, 11, 7) @[IDU.scala 182:40]
    node jal_Rd = bits(io.inst_req.bits.inst, 11, 7) @[IDU.scala 188:38]
    node jalr_Rd = bits(io.inst_req.bits.inst, 11, 7) @[IDU.scala 194:39]
    node jalr_Rs1 = bits(io.inst_req.bits.inst, 19, 15) @[IDU.scala 195:39]
    node sw_Rs1 = bits(io.inst_req.bits.inst, 19, 15) @[IDU.scala 201:37]
    node sw_Rs2 = bits(io.inst_req.bits.inst, 24, 20) @[IDU.scala 202:37]
    node sb_Rs1 = bits(io.inst_req.bits.inst, 19, 15) @[IDU.scala 208:37]
    node sb_Rs2 = bits(io.inst_req.bits.inst, 24, 20) @[IDU.scala 209:37]
    node sh_Rs1 = bits(io.inst_req.bits.inst, 19, 15) @[IDU.scala 215:37]
    node sh_Rs2 = bits(io.inst_req.bits.inst, 24, 20) @[IDU.scala 216:37]
    node beq_Rs1 = bits(io.inst_req.bits.inst, 19, 15) @[IDU.scala 222:38]
    node beq_Rs2 = bits(io.inst_req.bits.inst, 24, 20) @[IDU.scala 223:38]
    node bge_Rs1 = bits(io.inst_req.bits.inst, 19, 15) @[IDU.scala 228:38]
    node bge_Rs2 = bits(io.inst_req.bits.inst, 24, 20) @[IDU.scala 229:38]
    node blt_Rs1 = bits(io.inst_req.bits.inst, 19, 15) @[IDU.scala 234:38]
    node blt_Rs2 = bits(io.inst_req.bits.inst, 24, 20) @[IDU.scala 235:38]
    node bltu_Rs1 = bits(io.inst_req.bits.inst, 19, 15) @[IDU.scala 240:39]
    node bltu_Rs2 = bits(io.inst_req.bits.inst, 24, 20) @[IDU.scala 241:39]
    node bgeu_Rs1 = bits(io.inst_req.bits.inst, 19, 15) @[IDU.scala 246:39]
    node bgeu_Rs2 = bits(io.inst_req.bits.inst, 24, 20) @[IDU.scala 247:39]
    node bne_Rs1 = bits(io.inst_req.bits.inst, 19, 15) @[IDU.scala 252:38]
    node bne_Rs2 = bits(io.inst_req.bits.inst, 24, 20) @[IDU.scala 253:38]
    node lw_Rd = bits(io.inst_req.bits.inst, 11, 7) @[IDU.scala 258:37]
    node lw_Rs1 = bits(io.inst_req.bits.inst, 19, 15) @[IDU.scala 259:37]
    node lh_Rd = bits(io.inst_req.bits.inst, 11, 7) @[IDU.scala 265:37]
    node lh_Rs1 = bits(io.inst_req.bits.inst, 19, 15) @[IDU.scala 266:37]
    node lhu_Rd = bits(io.inst_req.bits.inst, 11, 7) @[IDU.scala 272:38]
    node lhu_Rs1 = bits(io.inst_req.bits.inst, 19, 15) @[IDU.scala 273:38]
    node lbu_Rd = bits(io.inst_req.bits.inst, 11, 7) @[IDU.scala 279:38]
    node lbu_Rs1 = bits(io.inst_req.bits.inst, 19, 15) @[IDU.scala 280:38]
    node lb_Rd = bits(io.inst_req.bits.inst, 11, 7) @[IDU.scala 286:37]
    node lb_Rs1 = bits(io.inst_req.bits.inst, 19, 15) @[IDU.scala 287:37]
    node _isaddi_T = bits(io.inst_req.bits.inst, 14, 12) @[IDU.scala 297:41]
    node _isaddi_T_1 = bits(io.inst_req.bits.inst, 6, 0) @[IDU.scala 297:71]
    node _isaddi_T_2 = cat(_isaddi_T, _isaddi_T_1) @[Cat.scala 31:58]
    node isaddi = eq(_isaddi_T_2, UInt<5>("h13")) @[IDU.scala 297:78]
    node _isxori_T = bits(io.inst_req.bits.inst, 14, 12) @[IDU.scala 298:41]
    node _isxori_T_1 = bits(io.inst_req.bits.inst, 6, 0) @[IDU.scala 298:71]
    node _isxori_T_2 = cat(_isxori_T, _isxori_T_1) @[Cat.scala 31:58]
    node isxori = eq(_isxori_T_2, UInt<10>("h213")) @[IDU.scala 298:78]
    node _isori_T = bits(io.inst_req.bits.inst, 14, 12) @[IDU.scala 299:41]
    node _isori_T_1 = bits(io.inst_req.bits.inst, 6, 0) @[IDU.scala 299:71]
    node _isori_T_2 = cat(_isori_T, _isori_T_1) @[Cat.scala 31:58]
    node isori = eq(_isori_T_2, UInt<10>("h313")) @[IDU.scala 299:78]
    node _isandi_T = bits(io.inst_req.bits.inst, 14, 12) @[IDU.scala 300:41]
    node _isandi_T_1 = bits(io.inst_req.bits.inst, 6, 0) @[IDU.scala 300:71]
    node _isandi_T_2 = cat(_isandi_T, _isandi_T_1) @[Cat.scala 31:58]
    node isandi = eq(_isandi_T_2, UInt<10>("h393")) @[IDU.scala 300:78]
    node _issrai_T = bits(io.inst_req.bits.inst, 31, 26) @[IDU.scala 301:41]
    node _issrai_T_1 = bits(io.inst_req.bits.inst, 14, 12) @[IDU.scala 301:71]
    node _issrai_T_2 = bits(io.inst_req.bits.inst, 6, 0) @[IDU.scala 301:101]
    node issrai_hi = cat(_issrai_T, _issrai_T_1) @[Cat.scala 31:58]
    node _issrai_T_3 = cat(issrai_hi, _issrai_T_2) @[Cat.scala 31:58]
    node issrai = eq(_issrai_T_3, UInt<15>("h4293")) @[IDU.scala 301:108]
    node _issrli_T = bits(io.inst_req.bits.inst, 31, 26) @[IDU.scala 302:41]
    node _issrli_T_1 = bits(io.inst_req.bits.inst, 14, 12) @[IDU.scala 302:71]
    node _issrli_T_2 = bits(io.inst_req.bits.inst, 6, 0) @[IDU.scala 302:101]
    node issrli_hi = cat(_issrli_T, _issrli_T_1) @[Cat.scala 31:58]
    node _issrli_T_3 = cat(issrli_hi, _issrli_T_2) @[Cat.scala 31:58]
    node issrli = eq(_issrli_T_3, UInt<10>("h293")) @[IDU.scala 302:108]
    node _isslli_T = bits(io.inst_req.bits.inst, 31, 26) @[IDU.scala 303:41]
    node _isslli_T_1 = bits(io.inst_req.bits.inst, 14, 12) @[IDU.scala 303:71]
    node _isslli_T_2 = bits(io.inst_req.bits.inst, 6, 0) @[IDU.scala 303:101]
    node isslli_hi = cat(_isslli_T, _isslli_T_1) @[Cat.scala 31:58]
    node _isslli_T_3 = cat(isslli_hi, _isslli_T_2) @[Cat.scala 31:58]
    node isslli = eq(_isslli_T_3, UInt<8>("h93")) @[IDU.scala 303:108]
    node _issra_T = bits(io.inst_req.bits.inst, 31, 26) @[IDU.scala 304:41]
    node _issra_T_1 = bits(io.inst_req.bits.inst, 14, 12) @[IDU.scala 304:71]
    node _issra_T_2 = bits(io.inst_req.bits.inst, 6, 0) @[IDU.scala 304:101]
    node issra_hi = cat(_issra_T, _issra_T_1) @[Cat.scala 31:58]
    node _issra_T_3 = cat(issra_hi, _issra_T_2) @[Cat.scala 31:58]
    node issra = eq(_issra_T_3, UInt<15>("h42b3")) @[IDU.scala 304:108]
    node _issrl_T = bits(io.inst_req.bits.inst, 31, 26) @[IDU.scala 305:41]
    node _issrl_T_1 = bits(io.inst_req.bits.inst, 14, 12) @[IDU.scala 305:71]
    node _issrl_T_2 = bits(io.inst_req.bits.inst, 6, 0) @[IDU.scala 305:101]
    node issrl_hi = cat(_issrl_T, _issrl_T_1) @[Cat.scala 31:58]
    node _issrl_T_3 = cat(issrl_hi, _issrl_T_2) @[Cat.scala 31:58]
    node issrl = eq(_issrl_T_3, UInt<10>("h2b3")) @[IDU.scala 305:108]
    node _isbeq_T = bits(io.inst_req.bits.inst, 14, 12) @[IDU.scala 306:41]
    node _isbeq_T_1 = bits(io.inst_req.bits.inst, 6, 0) @[IDU.scala 306:71]
    node _isbeq_T_2 = cat(_isbeq_T, _isbeq_T_1) @[Cat.scala 31:58]
    node isbeq = eq(_isbeq_T_2, UInt<7>("h63")) @[IDU.scala 306:78]
    node _isbne_T = bits(io.inst_req.bits.inst, 14, 12) @[IDU.scala 307:41]
    node _isbne_T_1 = bits(io.inst_req.bits.inst, 6, 0) @[IDU.scala 307:71]
    node _isbne_T_2 = cat(_isbne_T, _isbne_T_1) @[Cat.scala 31:58]
    node isbne = eq(_isbne_T_2, UInt<8>("he3")) @[IDU.scala 307:78]
    node _isadd_T = bits(io.inst_req.bits.inst, 31, 25) @[IDU.scala 308:41]
    node _isadd_T_1 = bits(io.inst_req.bits.inst, 14, 12) @[IDU.scala 308:71]
    node _isadd_T_2 = bits(io.inst_req.bits.inst, 6, 0) @[IDU.scala 308:101]
    node isadd_hi = cat(_isadd_T, _isadd_T_1) @[Cat.scala 31:58]
    node _isadd_T_3 = cat(isadd_hi, _isadd_T_2) @[Cat.scala 31:58]
    node isadd = eq(_isadd_T_3, UInt<6>("h33")) @[IDU.scala 308:108]
    node _isxor_T = bits(io.inst_req.bits.inst, 31, 25) @[IDU.scala 309:41]
    node _isxor_T_1 = bits(io.inst_req.bits.inst, 14, 12) @[IDU.scala 309:71]
    node _isxor_T_2 = bits(io.inst_req.bits.inst, 6, 0) @[IDU.scala 309:101]
    node isxor_hi = cat(_isxor_T, _isxor_T_1) @[Cat.scala 31:58]
    node _isxor_T_3 = cat(isxor_hi, _isxor_T_2) @[Cat.scala 31:58]
    node isxor = eq(_isxor_T_3, UInt<10>("h233")) @[IDU.scala 309:108]
    node _isand_T = bits(io.inst_req.bits.inst, 31, 25) @[IDU.scala 310:41]
    node _isand_T_1 = bits(io.inst_req.bits.inst, 14, 12) @[IDU.scala 310:71]
    node _isand_T_2 = bits(io.inst_req.bits.inst, 6, 0) @[IDU.scala 310:101]
    node isand_hi = cat(_isand_T, _isand_T_1) @[Cat.scala 31:58]
    node _isand_T_3 = cat(isand_hi, _isand_T_2) @[Cat.scala 31:58]
    node isand = eq(_isand_T_3, UInt<10>("h3b3")) @[IDU.scala 310:108]
    node _isor_T = bits(io.inst_req.bits.inst, 31, 25) @[IDU.scala 311:41]
    node _isor_T_1 = bits(io.inst_req.bits.inst, 14, 12) @[IDU.scala 311:71]
    node _isor_T_2 = bits(io.inst_req.bits.inst, 6, 0) @[IDU.scala 311:101]
    node isor_hi = cat(_isor_T, _isor_T_1) @[Cat.scala 31:58]
    node _isor_T_3 = cat(isor_hi, _isor_T_2) @[Cat.scala 31:58]
    node isor = eq(_isor_T_3, UInt<10>("h333")) @[IDU.scala 311:108]
    node _issub_T = bits(io.inst_req.bits.inst, 31, 25) @[IDU.scala 312:41]
    node _issub_T_1 = bits(io.inst_req.bits.inst, 14, 12) @[IDU.scala 312:71]
    node _issub_T_2 = bits(io.inst_req.bits.inst, 6, 0) @[IDU.scala 312:101]
    node issub_hi = cat(_issub_T, _issub_T_1) @[Cat.scala 31:58]
    node _issub_T_3 = cat(issub_hi, _issub_T_2) @[Cat.scala 31:58]
    node issub = eq(_issub_T_3, UInt<16>("h8033")) @[IDU.scala 312:108]
    node _islui_T = bits(io.inst_req.bits.inst, 6, 0) @[IDU.scala 313:37]
    node islui = eq(_islui_T, UInt<6>("h37")) @[IDU.scala 313:43]
    node _isauipc_T = bits(io.inst_req.bits.inst, 6, 0) @[IDU.scala 314:39]
    node isauipc = eq(_isauipc_T, UInt<5>("h17")) @[IDU.scala 314:45]
    node _isjal_T = bits(io.inst_req.bits.inst, 6, 0) @[IDU.scala 315:37]
    node isjal = eq(_isjal_T, UInt<7>("h6f")) @[IDU.scala 315:43]
    node _isjalr_T = bits(io.inst_req.bits.inst, 14, 12) @[IDU.scala 316:42]
    node _isjalr_T_1 = bits(io.inst_req.bits.inst, 6, 0) @[IDU.scala 316:72]
    node _isjalr_T_2 = cat(_isjalr_T, _isjalr_T_1) @[Cat.scala 31:58]
    node isjalr = eq(_isjalr_T_2, UInt<7>("h67")) @[IDU.scala 316:79]
    node _issw_T = bits(io.inst_req.bits.inst, 14, 12) @[IDU.scala 317:40]
    node _issw_T_1 = bits(io.inst_req.bits.inst, 6, 0) @[IDU.scala 317:70]
    node _issw_T_2 = cat(_issw_T, _issw_T_1) @[Cat.scala 31:58]
    node issw = eq(_issw_T_2, UInt<9>("h123")) @[IDU.scala 317:77]
    node _isbge_T = bits(io.inst_req.bits.inst, 14, 12) @[IDU.scala 318:40]
    node _isbge_T_1 = bits(io.inst_req.bits.inst, 6, 0) @[IDU.scala 318:70]
    node _isbge_T_2 = cat(_isbge_T, _isbge_T_1) @[Cat.scala 31:58]
    node isbge = eq(_isbge_T_2, UInt<10>("h2e3")) @[IDU.scala 318:77]
    node _isblt_T = bits(io.inst_req.bits.inst, 14, 12) @[IDU.scala 319:40]
    node _isblt_T_1 = bits(io.inst_req.bits.inst, 6, 0) @[IDU.scala 319:70]
    node _isblt_T_2 = cat(_isblt_T, _isblt_T_1) @[Cat.scala 31:58]
    node isblt = eq(_isblt_T_2, UInt<10>("h263")) @[IDU.scala 319:77]
    node _isbltu_T = bits(io.inst_req.bits.inst, 14, 12) @[IDU.scala 320:40]
    node _isbltu_T_1 = bits(io.inst_req.bits.inst, 6, 0) @[IDU.scala 320:70]
    node _isbltu_T_2 = cat(_isbltu_T, _isbltu_T_1) @[Cat.scala 31:58]
    node isbltu = eq(_isbltu_T_2, UInt<10>("h363")) @[IDU.scala 320:77]
    node _isbgeu_T = bits(io.inst_req.bits.inst, 14, 12) @[IDU.scala 321:40]
    node _isbgeu_T_1 = bits(io.inst_req.bits.inst, 6, 0) @[IDU.scala 321:70]
    node _isbgeu_T_2 = cat(_isbgeu_T, _isbgeu_T_1) @[Cat.scala 31:58]
    node isbgeu = eq(_isbgeu_T_2, UInt<10>("h3e3")) @[IDU.scala 321:77]
    node _issb_T = bits(io.inst_req.bits.inst, 14, 12) @[IDU.scala 322:40]
    node _issb_T_1 = bits(io.inst_req.bits.inst, 6, 0) @[IDU.scala 322:70]
    node _issb_T_2 = cat(_issb_T, _issb_T_1) @[Cat.scala 31:58]
    node issb = eq(_issb_T_2, UInt<6>("h23")) @[IDU.scala 322:77]
    node _issh_T = bits(io.inst_req.bits.inst, 14, 12) @[IDU.scala 323:40]
    node _issh_T_1 = bits(io.inst_req.bits.inst, 6, 0) @[IDU.scala 323:70]
    node _issh_T_2 = cat(_issh_T, _issh_T_1) @[Cat.scala 31:58]
    node issh = eq(_issh_T_2, UInt<8>("ha3")) @[IDU.scala 323:77]
    node _islbu_T = bits(io.inst_req.bits.inst, 14, 12) @[IDU.scala 324:40]
    node _islbu_T_1 = bits(io.inst_req.bits.inst, 6, 0) @[IDU.scala 324:70]
    node _islbu_T_2 = cat(_islbu_T, _islbu_T_1) @[Cat.scala 31:58]
    node islbu = eq(_islbu_T_2, UInt<10>("h203")) @[IDU.scala 324:77]
    node _islb_T = bits(io.inst_req.bits.inst, 14, 12) @[IDU.scala 325:40]
    node _islb_T_1 = bits(io.inst_req.bits.inst, 6, 0) @[IDU.scala 325:70]
    node _islb_T_2 = cat(_islb_T, _islb_T_1) @[Cat.scala 31:58]
    node islb = eq(_islb_T_2, UInt<2>("h3")) @[IDU.scala 325:77]
    node _islw_T = bits(io.inst_req.bits.inst, 14, 12) @[IDU.scala 326:40]
    node _islw_T_1 = bits(io.inst_req.bits.inst, 6, 0) @[IDU.scala 326:70]
    node _islw_T_2 = cat(_islw_T, _islw_T_1) @[Cat.scala 31:58]
    node islw = eq(_islw_T_2, UInt<9>("h103")) @[IDU.scala 326:77]
    node _islh_T = bits(io.inst_req.bits.inst, 14, 12) @[IDU.scala 327:40]
    node _islh_T_1 = bits(io.inst_req.bits.inst, 6, 0) @[IDU.scala 327:70]
    node _islh_T_2 = cat(_islh_T, _islh_T_1) @[Cat.scala 31:58]
    node islh = eq(_islh_T_2, UInt<8>("h83")) @[IDU.scala 327:77]
    node _islhu_T = bits(io.inst_req.bits.inst, 14, 12) @[IDU.scala 328:40]
    node _islhu_T_1 = bits(io.inst_req.bits.inst, 6, 0) @[IDU.scala 328:70]
    node _islhu_T_2 = cat(_islhu_T, _islhu_T_1) @[Cat.scala 31:58]
    node islhu = eq(_islhu_T_2, UInt<10>("h283")) @[IDU.scala 328:77]
    node _issll_T = bits(io.inst_req.bits.inst, 31, 25) @[IDU.scala 329:40]
    node _issll_T_1 = bits(io.inst_req.bits.inst, 14, 12) @[IDU.scala 329:70]
    node _issll_T_2 = bits(io.inst_req.bits.inst, 6, 0) @[IDU.scala 329:100]
    node issll_hi = cat(_issll_T, _issll_T_1) @[Cat.scala 31:58]
    node _issll_T_3 = cat(issll_hi, _issll_T_2) @[Cat.scala 31:58]
    node issll = eq(_issll_T_3, UInt<8>("hb3")) @[IDU.scala 329:107]
    node _isslt_T = bits(io.inst_req.bits.inst, 31, 25) @[IDU.scala 330:42]
    node _isslt_T_1 = bits(io.inst_req.bits.inst, 14, 12) @[IDU.scala 330:72]
    node _isslt_T_2 = bits(io.inst_req.bits.inst, 6, 0) @[IDU.scala 330:102]
    node isslt_hi = cat(_isslt_T, _isslt_T_1) @[Cat.scala 31:58]
    node _isslt_T_3 = cat(isslt_hi, _isslt_T_2) @[Cat.scala 31:58]
    node isslt = eq(_isslt_T_3, UInt<9>("h133")) @[IDU.scala 330:109]
    node _issltu_T = bits(io.inst_req.bits.inst, 31, 25) @[IDU.scala 331:42]
    node _issltu_T_1 = bits(io.inst_req.bits.inst, 14, 12) @[IDU.scala 331:72]
    node _issltu_T_2 = bits(io.inst_req.bits.inst, 6, 0) @[IDU.scala 331:102]
    node issltu_hi = cat(_issltu_T, _issltu_T_1) @[Cat.scala 31:58]
    node _issltu_T_3 = cat(issltu_hi, _issltu_T_2) @[Cat.scala 31:58]
    node issltu = eq(_issltu_T_3, UInt<9>("h1b3")) @[IDU.scala 331:109]
    node _issltiu_T = bits(io.inst_req.bits.inst, 14, 12) @[IDU.scala 332:42]
    node _issltiu_T_1 = bits(io.inst_req.bits.inst, 6, 0) @[IDU.scala 332:72]
    node _issltiu_T_2 = cat(_issltiu_T, _issltiu_T_1) @[Cat.scala 31:58]
    node issltiu = eq(_issltiu_T_2, UInt<9>("h193")) @[IDU.scala 332:79]
    node _isslti_T = bits(io.inst_req.bits.inst, 14, 12) @[IDU.scala 333:42]
    node _isslti_T_1 = bits(io.inst_req.bits.inst, 6, 0) @[IDU.scala 333:72]
    node _isslti_T_2 = cat(_isslti_T, _isslti_T_1) @[Cat.scala 31:58]
    node isslti = eq(_isslti_T_2, UInt<9>("h113")) @[IDU.scala 333:79]
    node _iscsrrw_T = bits(io.inst_req.bits.inst, 14, 12) @[IDU.scala 334:44]
    node _iscsrrw_T_1 = bits(io.inst_req.bits.inst, 6, 0) @[IDU.scala 334:74]
    node _iscsrrw_T_2 = cat(_iscsrrw_T, _iscsrrw_T_1) @[Cat.scala 31:58]
    node iscsrrw = eq(_iscsrrw_T_2, UInt<8>("hf3")) @[IDU.scala 334:81]
    node _iscsrrs_T = bits(io.inst_req.bits.inst, 14, 12) @[IDU.scala 335:44]
    node _iscsrrs_T_1 = bits(io.inst_req.bits.inst, 6, 0) @[IDU.scala 335:74]
    node _iscsrrs_T_2 = cat(_iscsrrs_T, _iscsrrs_T_1) @[Cat.scala 31:58]
    node iscsrrs = eq(_iscsrrs_T_2, UInt<9>("h173")) @[IDU.scala 335:81]
    node isebreak = eq(io.inst_req.bits.inst, UInt<21>("h100073")) @[IDU.scala 336:41]
    node isecall = eq(io.inst_req.bits.inst, UInt<7>("h73")) @[IDU.scala 337:41]
    node ismret = eq(io.inst_req.bits.inst, UInt<30>("h30200073")) @[IDU.scala 338:41]
    node _imm_type_reg_T = mux(islb, UInt<3>("h1"), UInt<3>("h0")) @[Mux.scala 101:16]
    node _imm_type_reg_T_1 = mux(islbu, UInt<3>("h1"), _imm_type_reg_T) @[Mux.scala 101:16]
    node _imm_type_reg_T_2 = mux(islhu, UInt<3>("h1"), _imm_type_reg_T_1) @[Mux.scala 101:16]
    node _imm_type_reg_T_3 = mux(islh, UInt<3>("h1"), _imm_type_reg_T_2) @[Mux.scala 101:16]
    node _imm_type_reg_T_4 = mux(islw, UInt<3>("h1"), _imm_type_reg_T_3) @[Mux.scala 101:16]
    node _imm_type_reg_T_5 = mux(issh, UInt<3>("h4"), _imm_type_reg_T_4) @[Mux.scala 101:16]
    node _imm_type_reg_T_6 = mux(issb, UInt<3>("h4"), _imm_type_reg_T_5) @[Mux.scala 101:16]
    node _imm_type_reg_T_7 = mux(issw, UInt<3>("h4"), _imm_type_reg_T_6) @[Mux.scala 101:16]
    node _imm_type_reg_T_8 = mux(isjalr, UInt<3>("h3"), _imm_type_reg_T_7) @[Mux.scala 101:16]
    node _imm_type_reg_T_9 = mux(isjal, UInt<3>("h3"), _imm_type_reg_T_8) @[Mux.scala 101:16]
    node _imm_type_reg_T_10 = mux(isauipc, UInt<3>("h2"), _imm_type_reg_T_9) @[Mux.scala 101:16]
    node _imm_type_reg_T_11 = mux(islui, UInt<3>("h2"), _imm_type_reg_T_10) @[Mux.scala 101:16]
    node _imm_type_reg_T_12 = mux(isslti, UInt<3>("h1"), _imm_type_reg_T_11) @[Mux.scala 101:16]
    node _imm_type_reg_T_13 = mux(issltiu, UInt<3>("h1"), _imm_type_reg_T_12) @[Mux.scala 101:16]
    node _imm_type_reg_T_14 = mux(isslli, UInt<3>("h5"), _imm_type_reg_T_13) @[Mux.scala 101:16]
    node _imm_type_reg_T_15 = mux(issrli, UInt<3>("h5"), _imm_type_reg_T_14) @[Mux.scala 101:16]
    node _imm_type_reg_T_16 = mux(issrai, UInt<3>("h5"), _imm_type_reg_T_15) @[Mux.scala 101:16]
    node _imm_type_reg_T_17 = mux(iscsrrs, UInt<3>("h6"), _imm_type_reg_T_16) @[Mux.scala 101:16]
    node _imm_type_reg_T_18 = mux(iscsrrw, UInt<3>("h6"), _imm_type_reg_T_17) @[Mux.scala 101:16]
    node _imm_type_reg_T_19 = mux(isandi, UInt<3>("h1"), _imm_type_reg_T_18) @[Mux.scala 101:16]
    node _imm_type_reg_T_20 = mux(isori, UInt<3>("h1"), _imm_type_reg_T_19) @[Mux.scala 101:16]
    node _imm_type_reg_T_21 = mux(isxori, UInt<3>("h1"), _imm_type_reg_T_20) @[Mux.scala 101:16]
    node imm_type_reg = mux(isaddi, UInt<3>("h1"), _imm_type_reg_T_21) @[Mux.scala 101:16]
    node _rs1_reg_T = mux(isslt, slt_Rs1, UInt<5>("h0")) @[Mux.scala 101:16]
    node _rs1_reg_T_1 = mux(issltu, sltu_Rs1, _rs1_reg_T) @[Mux.scala 101:16]
    node _rs1_reg_T_2 = mux(isbne, bne_Rs1, _rs1_reg_T_1) @[Mux.scala 101:16]
    node _rs1_reg_T_3 = mux(isbgeu, bgeu_Rs1, _rs1_reg_T_2) @[Mux.scala 101:16]
    node _rs1_reg_T_4 = mux(isbltu, bltu_Rs1, _rs1_reg_T_3) @[Mux.scala 101:16]
    node _rs1_reg_T_5 = mux(isblt, blt_Rs1, _rs1_reg_T_4) @[Mux.scala 101:16]
    node _rs1_reg_T_6 = mux(isbge, bge_Rs1, _rs1_reg_T_5) @[Mux.scala 101:16]
    node _rs1_reg_T_7 = mux(isbeq, beq_Rs1, _rs1_reg_T_6) @[Mux.scala 101:16]
    node _rs1_reg_T_8 = mux(issub, sub_Rs1, _rs1_reg_T_7) @[Mux.scala 101:16]
    node _rs1_reg_T_9 = mux(isor, or_Rs1, _rs1_reg_T_8) @[Mux.scala 101:16]
    node _rs1_reg_T_10 = mux(isxor, xor_Rs1, _rs1_reg_T_9) @[Mux.scala 101:16]
    node _rs1_reg_T_11 = mux(issrl, srl_Rs1, _rs1_reg_T_10) @[Mux.scala 101:16]
    node _rs1_reg_T_12 = mux(issra, sra_Rs1, _rs1_reg_T_11) @[Mux.scala 101:16]
    node _rs1_reg_T_13 = mux(issll, sll_Rs1, _rs1_reg_T_12) @[Mux.scala 101:16]
    node _rs1_reg_T_14 = mux(isand, and_Rs1, _rs1_reg_T_13) @[Mux.scala 101:16]
    node _rs1_reg_T_15 = mux(isadd, add_Rs1, _rs1_reg_T_14) @[Mux.scala 101:16]
    node _rs1_reg_T_16 = mux(islb, lb_Rs1, _rs1_reg_T_15) @[Mux.scala 101:16]
    node _rs1_reg_T_17 = mux(islbu, lbu_Rs1, _rs1_reg_T_16) @[Mux.scala 101:16]
    node _rs1_reg_T_18 = mux(islhu, lhu_Rs1, _rs1_reg_T_17) @[Mux.scala 101:16]
    node _rs1_reg_T_19 = mux(islh, lh_Rs1, _rs1_reg_T_18) @[Mux.scala 101:16]
    node _rs1_reg_T_20 = mux(islw, lw_Rs1, _rs1_reg_T_19) @[Mux.scala 101:16]
    node _rs1_reg_T_21 = mux(issh, sh_Rs1, _rs1_reg_T_20) @[Mux.scala 101:16]
    node _rs1_reg_T_22 = mux(issb, sb_Rs1, _rs1_reg_T_21) @[Mux.scala 101:16]
    node _rs1_reg_T_23 = mux(issw, sw_Rs1, _rs1_reg_T_22) @[Mux.scala 101:16]
    node _rs1_reg_T_24 = mux(isjalr, jalr_Rs1, _rs1_reg_T_23) @[Mux.scala 101:16]
    node _rs1_reg_T_25 = mux(isslti, slti_Rs1, _rs1_reg_T_24) @[Mux.scala 101:16]
    node _rs1_reg_T_26 = mux(issltiu, sltiu_Rs1, _rs1_reg_T_25) @[Mux.scala 101:16]
    node _rs1_reg_T_27 = mux(isslli, slli_Rs1, _rs1_reg_T_26) @[Mux.scala 101:16]
    node _rs1_reg_T_28 = mux(issrli, srli_Rs1, _rs1_reg_T_27) @[Mux.scala 101:16]
    node _rs1_reg_T_29 = mux(issrai, srai_Rs1, _rs1_reg_T_28) @[Mux.scala 101:16]
    node _rs1_reg_T_30 = mux(iscsrrs, csrrs_Rs1, _rs1_reg_T_29) @[Mux.scala 101:16]
    node _rs1_reg_T_31 = mux(iscsrrw, csrrw_Rs1, _rs1_reg_T_30) @[Mux.scala 101:16]
    node _rs1_reg_T_32 = mux(isandi, andi_Rs1, _rs1_reg_T_31) @[Mux.scala 101:16]
    node _rs1_reg_T_33 = mux(isori, ori_Rs1, _rs1_reg_T_32) @[Mux.scala 101:16]
    node _rs1_reg_T_34 = mux(isxori, xori_Rs1, _rs1_reg_T_33) @[Mux.scala 101:16]
    node rs1_reg = mux(isaddi, addi_Rs1, _rs1_reg_T_34) @[Mux.scala 101:16]
    node _rs2_reg_T = mux(isslt, slt_Rs2, UInt<5>("h0")) @[Mux.scala 101:16]
    node _rs2_reg_T_1 = mux(issltu, sltu_Rs2, _rs2_reg_T) @[Mux.scala 101:16]
    node _rs2_reg_T_2 = mux(isbne, bne_Rs2, _rs2_reg_T_1) @[Mux.scala 101:16]
    node _rs2_reg_T_3 = mux(isbgeu, bgeu_Rs2, _rs2_reg_T_2) @[Mux.scala 101:16]
    node _rs2_reg_T_4 = mux(isbltu, bltu_Rs2, _rs2_reg_T_3) @[Mux.scala 101:16]
    node _rs2_reg_T_5 = mux(isblt, blt_Rs2, _rs2_reg_T_4) @[Mux.scala 101:16]
    node _rs2_reg_T_6 = mux(isbge, bge_Rs2, _rs2_reg_T_5) @[Mux.scala 101:16]
    node _rs2_reg_T_7 = mux(isbeq, beq_Rs2, _rs2_reg_T_6) @[Mux.scala 101:16]
    node _rs2_reg_T_8 = mux(issub, sub_Rs2, _rs2_reg_T_7) @[Mux.scala 101:16]
    node _rs2_reg_T_9 = mux(isor, or_Rs2, _rs2_reg_T_8) @[Mux.scala 101:16]
    node _rs2_reg_T_10 = mux(isxor, xor_Rs2, _rs2_reg_T_9) @[Mux.scala 101:16]
    node _rs2_reg_T_11 = mux(issrl, srl_Rs2, _rs2_reg_T_10) @[Mux.scala 101:16]
    node _rs2_reg_T_12 = mux(issra, sra_Rs2, _rs2_reg_T_11) @[Mux.scala 101:16]
    node _rs2_reg_T_13 = mux(issll, sll_Rs2, _rs2_reg_T_12) @[Mux.scala 101:16]
    node _rs2_reg_T_14 = mux(isand, and_Rs2, _rs2_reg_T_13) @[Mux.scala 101:16]
    node _rs2_reg_T_15 = mux(isadd, add_Rs2, _rs2_reg_T_14) @[Mux.scala 101:16]
    node _rs2_reg_T_16 = mux(issh, sh_Rs2, _rs2_reg_T_15) @[Mux.scala 101:16]
    node _rs2_reg_T_17 = mux(issb, sb_Rs2, _rs2_reg_T_16) @[Mux.scala 101:16]
    node rs2_reg = mux(issw, sw_Rs2, _rs2_reg_T_17) @[Mux.scala 101:16]
    node _rd_reg_T = mux(isslt, slt_Rd, UInt<5>("h0")) @[Mux.scala 101:16]
    node _rd_reg_T_1 = mux(issltu, sltu_Rd, _rd_reg_T) @[Mux.scala 101:16]
    node _rd_reg_T_2 = mux(issub, sub_Rd, _rd_reg_T_1) @[Mux.scala 101:16]
    node _rd_reg_T_3 = mux(isor, or_Rd, _rd_reg_T_2) @[Mux.scala 101:16]
    node _rd_reg_T_4 = mux(isxor, xor_Rd, _rd_reg_T_3) @[Mux.scala 101:16]
    node _rd_reg_T_5 = mux(issrl, srl_Rd, _rd_reg_T_4) @[Mux.scala 101:16]
    node _rd_reg_T_6 = mux(issra, sra_Rd, _rd_reg_T_5) @[Mux.scala 101:16]
    node _rd_reg_T_7 = mux(issll, sll_Rd, _rd_reg_T_6) @[Mux.scala 101:16]
    node _rd_reg_T_8 = mux(isand, and_Rd, _rd_reg_T_7) @[Mux.scala 101:16]
    node _rd_reg_T_9 = mux(isadd, add_Rd, _rd_reg_T_8) @[Mux.scala 101:16]
    node _rd_reg_T_10 = mux(islb, lb_Rd, _rd_reg_T_9) @[Mux.scala 101:16]
    node _rd_reg_T_11 = mux(islbu, lbu_Rd, _rd_reg_T_10) @[Mux.scala 101:16]
    node _rd_reg_T_12 = mux(islhu, lhu_Rd, _rd_reg_T_11) @[Mux.scala 101:16]
    node _rd_reg_T_13 = mux(islh, lh_Rd, _rd_reg_T_12) @[Mux.scala 101:16]
    node _rd_reg_T_14 = mux(islw, lw_Rd, _rd_reg_T_13) @[Mux.scala 101:16]
    node _rd_reg_T_15 = mux(isjalr, jalr_Rd, _rd_reg_T_14) @[Mux.scala 101:16]
    node _rd_reg_T_16 = mux(isjal, jal_Rd, _rd_reg_T_15) @[Mux.scala 101:16]
    node _rd_reg_T_17 = mux(isauipc, auipc_Rd, _rd_reg_T_16) @[Mux.scala 101:16]
    node _rd_reg_T_18 = mux(islui, lui_Rd, _rd_reg_T_17) @[Mux.scala 101:16]
    node _rd_reg_T_19 = mux(isslti, slti_Rd, _rd_reg_T_18) @[Mux.scala 101:16]
    node _rd_reg_T_20 = mux(issltiu, sltiu_Rd, _rd_reg_T_19) @[Mux.scala 101:16]
    node _rd_reg_T_21 = mux(isslli, slli_Rd, _rd_reg_T_20) @[Mux.scala 101:16]
    node _rd_reg_T_22 = mux(issrli, srli_Rd, _rd_reg_T_21) @[Mux.scala 101:16]
    node _rd_reg_T_23 = mux(issrai, srai_Rd, _rd_reg_T_22) @[Mux.scala 101:16]
    node _rd_reg_T_24 = mux(iscsrrs, csrrs_Rd, _rd_reg_T_23) @[Mux.scala 101:16]
    node _rd_reg_T_25 = mux(iscsrrw, csrrw_Rd, _rd_reg_T_24) @[Mux.scala 101:16]
    node _rd_reg_T_26 = mux(isandi, andi_Rd, _rd_reg_T_25) @[Mux.scala 101:16]
    node _rd_reg_T_27 = mux(isori, ori_Rd, _rd_reg_T_26) @[Mux.scala 101:16]
    node _rd_reg_T_28 = mux(isxori, xori_Rd, _rd_reg_T_27) @[Mux.scala 101:16]
    node rd_reg = mux(isaddi, addi_Rd, _rd_reg_T_28) @[Mux.scala 101:16]
    node _ALU_ctrl_reg_T = mux(issltu, UInt<4>("h2"), UInt<5>("h0")) @[Mux.scala 101:16]
    node _ALU_ctrl_reg_T_1 = mux(isslt, UInt<4>("ha"), _ALU_ctrl_reg_T) @[Mux.scala 101:16]
    node _ALU_ctrl_reg_T_2 = mux(isbne, UInt<4>("h0"), _ALU_ctrl_reg_T_1) @[Mux.scala 101:16]
    node _ALU_ctrl_reg_T_3 = mux(isbgeu, UInt<4>("h0"), _ALU_ctrl_reg_T_2) @[Mux.scala 101:16]
    node _ALU_ctrl_reg_T_4 = mux(isbltu, UInt<4>("h0"), _ALU_ctrl_reg_T_3) @[Mux.scala 101:16]
    node _ALU_ctrl_reg_T_5 = mux(isblt, UInt<4>("h0"), _ALU_ctrl_reg_T_4) @[Mux.scala 101:16]
    node _ALU_ctrl_reg_T_6 = mux(isbge, UInt<4>("h0"), _ALU_ctrl_reg_T_5) @[Mux.scala 101:16]
    node _ALU_ctrl_reg_T_7 = mux(isbeq, UInt<4>("h0"), _ALU_ctrl_reg_T_6) @[Mux.scala 101:16]
    node _ALU_ctrl_reg_T_8 = mux(issub, UInt<4>("h1"), _ALU_ctrl_reg_T_7) @[Mux.scala 101:16]
    node _ALU_ctrl_reg_T_9 = mux(isor, UInt<4>("h3"), _ALU_ctrl_reg_T_8) @[Mux.scala 101:16]
    node _ALU_ctrl_reg_T_10 = mux(isxor, UInt<4>("h4"), _ALU_ctrl_reg_T_9) @[Mux.scala 101:16]
    node _ALU_ctrl_reg_T_11 = mux(issrl, UInt<4>("h9"), _ALU_ctrl_reg_T_10) @[Mux.scala 101:16]
    node _ALU_ctrl_reg_T_12 = mux(issra, UInt<4>("h5"), _ALU_ctrl_reg_T_11) @[Mux.scala 101:16]
    node _ALU_ctrl_reg_T_13 = mux(issll, UInt<4>("h8"), _ALU_ctrl_reg_T_12) @[Mux.scala 101:16]
    node _ALU_ctrl_reg_T_14 = mux(isand, UInt<4>("h6"), _ALU_ctrl_reg_T_13) @[Mux.scala 101:16]
    node _ALU_ctrl_reg_T_15 = mux(isadd, UInt<4>("h0"), _ALU_ctrl_reg_T_14) @[Mux.scala 101:16]
    node _ALU_ctrl_reg_T_16 = mux(islb, UInt<4>("h0"), _ALU_ctrl_reg_T_15) @[Mux.scala 101:16]
    node _ALU_ctrl_reg_T_17 = mux(islbu, UInt<4>("h0"), _ALU_ctrl_reg_T_16) @[Mux.scala 101:16]
    node _ALU_ctrl_reg_T_18 = mux(islhu, UInt<4>("h0"), _ALU_ctrl_reg_T_17) @[Mux.scala 101:16]
    node _ALU_ctrl_reg_T_19 = mux(islh, UInt<4>("h0"), _ALU_ctrl_reg_T_18) @[Mux.scala 101:16]
    node _ALU_ctrl_reg_T_20 = mux(islw, UInt<4>("h0"), _ALU_ctrl_reg_T_19) @[Mux.scala 101:16]
    node _ALU_ctrl_reg_T_21 = mux(issh, UInt<4>("h0"), _ALU_ctrl_reg_T_20) @[Mux.scala 101:16]
    node _ALU_ctrl_reg_T_22 = mux(issb, UInt<4>("h0"), _ALU_ctrl_reg_T_21) @[Mux.scala 101:16]
    node _ALU_ctrl_reg_T_23 = mux(issw, UInt<4>("h0"), _ALU_ctrl_reg_T_22) @[Mux.scala 101:16]
    node _ALU_ctrl_reg_T_24 = mux(isjalr, UInt<4>("h0"), _ALU_ctrl_reg_T_23) @[Mux.scala 101:16]
    node _ALU_ctrl_reg_T_25 = mux(isjal, UInt<4>("h0"), _ALU_ctrl_reg_T_24) @[Mux.scala 101:16]
    node _ALU_ctrl_reg_T_26 = mux(isauipc, UInt<4>("h0"), _ALU_ctrl_reg_T_25) @[Mux.scala 101:16]
    node _ALU_ctrl_reg_T_27 = mux(islui, UInt<4>("h0"), _ALU_ctrl_reg_T_26) @[Mux.scala 101:16]
    node _ALU_ctrl_reg_T_28 = mux(isslti, UInt<4>("ha"), _ALU_ctrl_reg_T_27) @[Mux.scala 101:16]
    node _ALU_ctrl_reg_T_29 = mux(issltiu, UInt<4>("h2"), _ALU_ctrl_reg_T_28) @[Mux.scala 101:16]
    node _ALU_ctrl_reg_T_30 = mux(isslli, UInt<4>("h8"), _ALU_ctrl_reg_T_29) @[Mux.scala 101:16]
    node _ALU_ctrl_reg_T_31 = mux(issrli, UInt<4>("h9"), _ALU_ctrl_reg_T_30) @[Mux.scala 101:16]
    node _ALU_ctrl_reg_T_32 = mux(issrai, UInt<4>("h5"), _ALU_ctrl_reg_T_31) @[Mux.scala 101:16]
    node _ALU_ctrl_reg_T_33 = mux(iscsrrs, UInt<4>("hc"), _ALU_ctrl_reg_T_32) @[Mux.scala 101:16]
    node _ALU_ctrl_reg_T_34 = mux(iscsrrw, UInt<4>("hb"), _ALU_ctrl_reg_T_33) @[Mux.scala 101:16]
    node _ALU_ctrl_reg_T_35 = mux(isandi, UInt<4>("h6"), _ALU_ctrl_reg_T_34) @[Mux.scala 101:16]
    node _ALU_ctrl_reg_T_36 = mux(isori, UInt<4>("h3"), _ALU_ctrl_reg_T_35) @[Mux.scala 101:16]
    node _ALU_ctrl_reg_T_37 = mux(isxori, UInt<4>("h4"), _ALU_ctrl_reg_T_36) @[Mux.scala 101:16]
    node ALU_ctrl_reg = mux(isaddi, UInt<4>("h0"), _ALU_ctrl_reg_T_37) @[Mux.scala 101:16]
    node _data_control_reg_T = mux(issltu, UInt<3>("h3"), UInt<3>("h0")) @[Mux.scala 101:16]
    node _data_control_reg_T_1 = mux(isslt, UInt<3>("h3"), _data_control_reg_T) @[Mux.scala 101:16]
    node _data_control_reg_T_2 = mux(isbne, UInt<3>("h0"), _data_control_reg_T_1) @[Mux.scala 101:16]
    node _data_control_reg_T_3 = mux(isbgeu, UInt<3>("h0"), _data_control_reg_T_2) @[Mux.scala 101:16]
    node _data_control_reg_T_4 = mux(isbltu, UInt<3>("h0"), _data_control_reg_T_3) @[Mux.scala 101:16]
    node _data_control_reg_T_5 = mux(isblt, UInt<3>("h0"), _data_control_reg_T_4) @[Mux.scala 101:16]
    node _data_control_reg_T_6 = mux(isbge, UInt<3>("h0"), _data_control_reg_T_5) @[Mux.scala 101:16]
    node _data_control_reg_T_7 = mux(isbeq, UInt<3>("h0"), _data_control_reg_T_6) @[Mux.scala 101:16]
    node _data_control_reg_T_8 = mux(issub, UInt<3>("h3"), _data_control_reg_T_7) @[Mux.scala 101:16]
    node _data_control_reg_T_9 = mux(isor, UInt<3>("h3"), _data_control_reg_T_8) @[Mux.scala 101:16]
    node _data_control_reg_T_10 = mux(isxor, UInt<3>("h3"), _data_control_reg_T_9) @[Mux.scala 101:16]
    node _data_control_reg_T_11 = mux(issrl, UInt<3>("h3"), _data_control_reg_T_10) @[Mux.scala 101:16]
    node _data_control_reg_T_12 = mux(issra, UInt<3>("h3"), _data_control_reg_T_11) @[Mux.scala 101:16]
    node _data_control_reg_T_13 = mux(issll, UInt<3>("h3"), _data_control_reg_T_12) @[Mux.scala 101:16]
    node _data_control_reg_T_14 = mux(isand, UInt<3>("h3"), _data_control_reg_T_13) @[Mux.scala 101:16]
    node _data_control_reg_T_15 = mux(isadd, UInt<3>("h3"), _data_control_reg_T_14) @[Mux.scala 101:16]
    node _data_control_reg_T_16 = mux(islb, UInt<3>("h2"), _data_control_reg_T_15) @[Mux.scala 101:16]
    node _data_control_reg_T_17 = mux(islbu, UInt<3>("h2"), _data_control_reg_T_16) @[Mux.scala 101:16]
    node _data_control_reg_T_18 = mux(islhu, UInt<3>("h2"), _data_control_reg_T_17) @[Mux.scala 101:16]
    node _data_control_reg_T_19 = mux(islh, UInt<3>("h2"), _data_control_reg_T_18) @[Mux.scala 101:16]
    node _data_control_reg_T_20 = mux(islw, UInt<3>("h2"), _data_control_reg_T_19) @[Mux.scala 101:16]
    node _data_control_reg_T_21 = mux(issh, UInt<3>("h0"), _data_control_reg_T_20) @[Mux.scala 101:16]
    node _data_control_reg_T_22 = mux(issb, UInt<3>("h0"), _data_control_reg_T_21) @[Mux.scala 101:16]
    node _data_control_reg_T_23 = mux(issw, UInt<3>("h0"), _data_control_reg_T_22) @[Mux.scala 101:16]
    node _data_control_reg_T_24 = mux(isjalr, UInt<3>("h1"), _data_control_reg_T_23) @[Mux.scala 101:16]
    node _data_control_reg_T_25 = mux(isjal, UInt<3>("h1"), _data_control_reg_T_24) @[Mux.scala 101:16]
    node data_control_reg = mux(isauipc, UInt<3>("h1"), _data_control_reg_T_25) @[Mux.scala 101:16]
    node _pc_next_type_reg_T = mux(isslti, UInt<4>("h0"), UInt<4>("h3")) @[Mux.scala 101:16]
    node _pc_next_type_reg_T_1 = mux(issltiu, UInt<4>("h0"), _pc_next_type_reg_T) @[Mux.scala 101:16]
    node _pc_next_type_reg_T_2 = mux(isslt, UInt<4>("h0"), _pc_next_type_reg_T_1) @[Mux.scala 101:16]
    node _pc_next_type_reg_T_3 = mux(issltu, UInt<4>("h0"), _pc_next_type_reg_T_2) @[Mux.scala 101:16]
    node _pc_next_type_reg_T_4 = mux(isbne, UInt<4>("h5"), _pc_next_type_reg_T_3) @[Mux.scala 101:16]
    node _pc_next_type_reg_T_5 = mux(isbgeu, UInt<4>("h8"), _pc_next_type_reg_T_4) @[Mux.scala 101:16]
    node _pc_next_type_reg_T_6 = mux(isbltu, UInt<4>("ha"), _pc_next_type_reg_T_5) @[Mux.scala 101:16]
    node _pc_next_type_reg_T_7 = mux(isblt, UInt<4>("h9"), _pc_next_type_reg_T_6) @[Mux.scala 101:16]
    node _pc_next_type_reg_T_8 = mux(isbge, UInt<4>("h7"), _pc_next_type_reg_T_7) @[Mux.scala 101:16]
    node _pc_next_type_reg_T_9 = mux(isbeq, UInt<4>("h6"), _pc_next_type_reg_T_8) @[Mux.scala 101:16]
    node _pc_next_type_reg_T_10 = mux(issub, UInt<4>("h0"), _pc_next_type_reg_T_9) @[Mux.scala 101:16]
    node _pc_next_type_reg_T_11 = mux(isor, UInt<4>("h0"), _pc_next_type_reg_T_10) @[Mux.scala 101:16]
    node _pc_next_type_reg_T_12 = mux(isxor, UInt<4>("h0"), _pc_next_type_reg_T_11) @[Mux.scala 101:16]
    node _pc_next_type_reg_T_13 = mux(issrl, UInt<4>("h0"), _pc_next_type_reg_T_12) @[Mux.scala 101:16]
    node _pc_next_type_reg_T_14 = mux(issra, UInt<4>("h0"), _pc_next_type_reg_T_13) @[Mux.scala 101:16]
    node _pc_next_type_reg_T_15 = mux(issll, UInt<4>("h0"), _pc_next_type_reg_T_14) @[Mux.scala 101:16]
    node _pc_next_type_reg_T_16 = mux(isand, UInt<4>("h0"), _pc_next_type_reg_T_15) @[Mux.scala 101:16]
    node _pc_next_type_reg_T_17 = mux(isadd, UInt<4>("h0"), _pc_next_type_reg_T_16) @[Mux.scala 101:16]
    node _pc_next_type_reg_T_18 = mux(islb, UInt<4>("h0"), _pc_next_type_reg_T_17) @[Mux.scala 101:16]
    node _pc_next_type_reg_T_19 = mux(islbu, UInt<4>("h0"), _pc_next_type_reg_T_18) @[Mux.scala 101:16]
    node _pc_next_type_reg_T_20 = mux(islhu, UInt<4>("h0"), _pc_next_type_reg_T_19) @[Mux.scala 101:16]
    node _pc_next_type_reg_T_21 = mux(islh, UInt<4>("h0"), _pc_next_type_reg_T_20) @[Mux.scala 101:16]
    node _pc_next_type_reg_T_22 = mux(islw, UInt<4>("h0"), _pc_next_type_reg_T_21) @[Mux.scala 101:16]
    node _pc_next_type_reg_T_23 = mux(ismret, UInt<4>("hc"), _pc_next_type_reg_T_22) @[Mux.scala 101:16]
    node _pc_next_type_reg_T_24 = mux(isecall, UInt<4>("hb"), _pc_next_type_reg_T_23) @[Mux.scala 101:16]
    node _pc_next_type_reg_T_25 = mux(isebreak, UInt<4>("h4"), _pc_next_type_reg_T_24) @[Mux.scala 101:16]
    node _pc_next_type_reg_T_26 = mux(issh, UInt<4>("h0"), _pc_next_type_reg_T_25) @[Mux.scala 101:16]
    node _pc_next_type_reg_T_27 = mux(issb, UInt<4>("h0"), _pc_next_type_reg_T_26) @[Mux.scala 101:16]
    node _pc_next_type_reg_T_28 = mux(issw, UInt<4>("h0"), _pc_next_type_reg_T_27) @[Mux.scala 101:16]
    node _pc_next_type_reg_T_29 = mux(isslli, UInt<4>("h0"), _pc_next_type_reg_T_28) @[Mux.scala 101:16]
    node _pc_next_type_reg_T_30 = mux(issrli, UInt<4>("h0"), _pc_next_type_reg_T_29) @[Mux.scala 101:16]
    node _pc_next_type_reg_T_31 = mux(issrai, UInt<4>("h0"), _pc_next_type_reg_T_30) @[Mux.scala 101:16]
    node _pc_next_type_reg_T_32 = mux(iscsrrs, UInt<4>("h0"), _pc_next_type_reg_T_31) @[Mux.scala 101:16]
    node _pc_next_type_reg_T_33 = mux(iscsrrw, UInt<4>("h0"), _pc_next_type_reg_T_32) @[Mux.scala 101:16]
    node _pc_next_type_reg_T_34 = mux(isandi, UInt<4>("h0"), _pc_next_type_reg_T_33) @[Mux.scala 101:16]
    node _pc_next_type_reg_T_35 = mux(isori, UInt<4>("h0"), _pc_next_type_reg_T_34) @[Mux.scala 101:16]
    node _pc_next_type_reg_T_36 = mux(isxori, UInt<4>("h0"), _pc_next_type_reg_T_35) @[Mux.scala 101:16]
    node _pc_next_type_reg_T_37 = mux(isaddi, UInt<4>("h0"), _pc_next_type_reg_T_36) @[Mux.scala 101:16]
    node _pc_next_type_reg_T_38 = mux(islui, UInt<4>("h0"), _pc_next_type_reg_T_37) @[Mux.scala 101:16]
    node _pc_next_type_reg_T_39 = mux(isauipc, UInt<4>("h0"), _pc_next_type_reg_T_38) @[Mux.scala 101:16]
    node _pc_next_type_reg_T_40 = mux(isjalr, UInt<4>("h2"), _pc_next_type_reg_T_39) @[Mux.scala 101:16]
    node pc_next_type_reg = mux(isjal, UInt<4>("h1"), _pc_next_type_reg_T_40) @[Mux.scala 101:16]
    node _imm_type_reg_o_T = mux(io.inst_req.valid, imm_type_reg, imm_type_reg_o) @[IDU.scala 578:24]
    imm_type_reg_o <= _imm_type_reg_o_T @[IDU.scala 578:18]
    node _rs1_reg_o_T = mux(io.inst_req.valid, rs1_reg, rs1_reg_o) @[IDU.scala 579:19]
    rs1_reg_o <= _rs1_reg_o_T @[IDU.scala 579:13]
    node _rs2_reg_o_T = mux(io.inst_req.valid, rs2_reg, rs2_reg_o) @[IDU.scala 580:19]
    rs2_reg_o <= _rs2_reg_o_T @[IDU.scala 580:13]
    node _rd_reg_o_T = mux(io.inst_req.valid, rd_reg, rd_reg_o) @[IDU.scala 581:19]
    rd_reg_o <= _rd_reg_o_T @[IDU.scala 581:12]
    node _ALU_ctrl_reg_o_T = mux(io.inst_req.valid, ALU_ctrl_reg, ALU_ctrl_reg_o) @[IDU.scala 582:24]
    ALU_ctrl_reg_o <= _ALU_ctrl_reg_o_T @[IDU.scala 582:18]
    node _data_control_reg_o_T = mux(io.inst_req.valid, data_control_reg, data_control_reg_o) @[IDU.scala 583:28]
    data_control_reg_o <= _data_control_reg_o_T @[IDU.scala 583:22]
    node _pc_next_type_reg_o_T = mux(io.inst_req.valid, pc_next_type_reg, pc_next_type_reg_o) @[IDU.scala 584:28]
    pc_next_type_reg_o <= _pc_next_type_reg_o_T @[IDU.scala 584:22]
    node _inst_reg_T = mux(io.inst_req.valid, io.inst_req.bits.inst, inst_reg) @[IDU.scala 585:18]
    inst_reg <= _inst_reg_T @[IDU.scala 585:12]
    node _pc_reg_T = mux(io.inst_req.valid, io.inst_req.bits.pc, pc_reg) @[IDU.scala 586:16]
    pc_reg <= _pc_reg_T @[IDU.scala 586:10]
    node _state_idu_T = mux(io.inst_req.ready, UInt<1>("h0"), UInt<1>("h1")) @[IDU.scala 590:19]
    node _state_idu_T_1 = eq(UInt<1>("h1"), state_idu) @[Mux.scala 81:61]
    node _state_idu_T_2 = mux(_state_idu_T_1, _state_idu_T, UInt<1>("h1")) @[Mux.scala 81:58]
    state_idu <= _state_idu_T_2 @[IDU.scala 588:13]
    node _io_inst_req_ready_T = eq(state_idu, UInt<1>("h1")) @[IDU.scala 593:35]
    io.inst_req.ready <= _io_inst_req_ready_T @[IDU.scala 593:21]
    io.imm_type <= imm_type_reg_o @[IDU.scala 595:15]
    io.rs1 <= rs1_reg_o @[IDU.scala 596:10]
    io.rs2 <= rs2_reg_o @[IDU.scala 597:10]
    io.rd <= rd_reg_o @[IDU.scala 598:9]
    io.ALU_ctrl <= ALU_ctrl_reg_o @[IDU.scala 599:15]
    io.data_control <= data_control_reg_o @[IDU.scala 600:19]
    io.pc_next_type <= pc_next_type_reg_o @[IDU.scala 601:19]
    io.instruction_o <= inst_reg @[IDU.scala 602:20]
    io.pc_o <= pc_reg @[IDU.scala 603:11]

  module imm :
    input clock : Clock
    input reset : Reset
    output io : { flip instruction : UInt<32>, flip imm_type : UInt<3>, imm : UInt<32>}

    node _Imm_type1_T = bits(io.instruction, 31, 31) @[imm.scala 15:46]
    node _Imm_type1_T_1 = bits(_Imm_type1_T, 0, 0) @[Bitwise.scala 74:15]
    node _Imm_type1_T_2 = mux(_Imm_type1_T_1, UInt<20>("hfffff"), UInt<20>("h0")) @[Bitwise.scala 74:12]
    node _Imm_type1_T_3 = bits(io.instruction, 31, 20) @[imm.scala 15:70]
    node Imm_type1 = cat(_Imm_type1_T_2, _Imm_type1_T_3) @[Cat.scala 31:58]
    node _Imm_type2_T = bits(io.instruction, 31, 12) @[imm.scala 16:38]
    node _Imm_type2_T_1 = mux(UInt<1>("h0"), UInt<12>("hfff"), UInt<12>("h0")) @[Bitwise.scala 74:12]
    node Imm_type2 = cat(_Imm_type2_T, _Imm_type2_T_1) @[Cat.scala 31:58]
    node _Imm_type4_T = bits(io.instruction, 31, 31) @[imm.scala 17:46]
    node _Imm_type4_T_1 = bits(_Imm_type4_T, 0, 0) @[Bitwise.scala 74:15]
    node _Imm_type4_T_2 = mux(_Imm_type4_T_1, UInt<20>("hfffff"), UInt<20>("h0")) @[Bitwise.scala 74:12]
    node _Imm_type4_T_3 = bits(io.instruction, 31, 25) @[imm.scala 17:70]
    node _Imm_type4_T_4 = bits(io.instruction, 11, 7) @[imm.scala 17:93]
    node Imm_type4_hi = cat(_Imm_type4_T_2, _Imm_type4_T_3) @[Cat.scala 31:58]
    node Imm_type4 = cat(Imm_type4_hi, _Imm_type4_T_4) @[Cat.scala 31:58]
    node _Imm_type5_T = mux(UInt<1>("h0"), UInt<27>("h7ffffff"), UInt<27>("h0")) @[Bitwise.scala 74:12]
    node _Imm_type5_T_1 = bits(io.instruction, 24, 20) @[imm.scala 18:55]
    node Imm_type5 = cat(_Imm_type5_T, _Imm_type5_T_1) @[Cat.scala 31:58]
    node _Imm_type6_T = mux(UInt<1>("h0"), UInt<20>("hfffff"), UInt<20>("h0")) @[Bitwise.scala 74:12]
    node _Imm_type6_T_1 = bits(io.instruction, 31, 20) @[imm.scala 19:55]
    node Imm_type6 = cat(_Imm_type6_T, _Imm_type6_T_1) @[Cat.scala 31:58]
    node is_type1 = eq(io.imm_type, UInt<1>("h1")) @[imm.scala 21:31]
    node is_type2 = eq(io.imm_type, UInt<2>("h2")) @[imm.scala 22:31]
    node is_type3 = eq(io.imm_type, UInt<2>("h3")) @[imm.scala 23:31]
    node is_type4 = eq(io.imm_type, UInt<3>("h4")) @[imm.scala 24:31]
    node is_type5 = eq(io.imm_type, UInt<3>("h5")) @[imm.scala 25:31]
    node is_type6 = eq(io.imm_type, UInt<3>("h6")) @[imm.scala 26:31]
    node _io_imm_T = mux(is_type6, Imm_type6, UInt<32>("h0")) @[Mux.scala 101:16]
    node _io_imm_T_1 = mux(is_type5, Imm_type5, _io_imm_T) @[Mux.scala 101:16]
    node _io_imm_T_2 = mux(is_type4, Imm_type4, _io_imm_T_1) @[Mux.scala 101:16]
    node _io_imm_T_3 = mux(is_type3, UInt<32>("h4"), _io_imm_T_2) @[Mux.scala 101:16]
    node _io_imm_T_4 = mux(is_type2, Imm_type2, _io_imm_T_3) @[Mux.scala 101:16]
    node _io_imm_T_5 = mux(is_type1, Imm_type1, _io_imm_T_4) @[Mux.scala 101:16]
    io.imm <= _io_imm_T_5 @[imm.scala 29:10]

  module gpr :
    input clock : Clock
    input reset : Reset
    output io : { flip rd_Req : { flip ready : UInt<1>, valid : UInt<1>, bits : { rd_addr : UInt<5>, rd_data : UInt<32>}}, flip raddr_rs1 : UInt<5>, rdata_rs1 : UInt<32>, flip raddr_rs2 : UInt<5>, rdata_rs2 : UInt<32>}

    wire _regs_WIRE : UInt<32>[32] @[gpr.scala 16:42]
    _regs_WIRE[0] <= UInt<32>("h0") @[gpr.scala 16:42]
    _regs_WIRE[1] <= UInt<32>("h1") @[gpr.scala 16:42]
    _regs_WIRE[2] <= UInt<32>("h2") @[gpr.scala 16:42]
    _regs_WIRE[3] <= UInt<32>("h3") @[gpr.scala 16:42]
    _regs_WIRE[4] <= UInt<32>("h4") @[gpr.scala 16:42]
    _regs_WIRE[5] <= UInt<32>("h5") @[gpr.scala 16:42]
    _regs_WIRE[6] <= UInt<32>("h6") @[gpr.scala 16:42]
    _regs_WIRE[7] <= UInt<32>("h7") @[gpr.scala 16:42]
    _regs_WIRE[8] <= UInt<32>("h8") @[gpr.scala 16:42]
    _regs_WIRE[9] <= UInt<32>("h9") @[gpr.scala 16:42]
    _regs_WIRE[10] <= UInt<32>("ha") @[gpr.scala 16:42]
    _regs_WIRE[11] <= UInt<32>("hb") @[gpr.scala 16:42]
    _regs_WIRE[12] <= UInt<32>("hc") @[gpr.scala 16:42]
    _regs_WIRE[13] <= UInt<32>("hd") @[gpr.scala 16:42]
    _regs_WIRE[14] <= UInt<32>("he") @[gpr.scala 16:42]
    _regs_WIRE[15] <= UInt<32>("hf") @[gpr.scala 16:42]
    _regs_WIRE[16] <= UInt<32>("h10") @[gpr.scala 16:42]
    _regs_WIRE[17] <= UInt<32>("h11") @[gpr.scala 16:42]
    _regs_WIRE[18] <= UInt<32>("h12") @[gpr.scala 16:42]
    _regs_WIRE[19] <= UInt<32>("h13") @[gpr.scala 16:42]
    _regs_WIRE[20] <= UInt<32>("h14") @[gpr.scala 16:42]
    _regs_WIRE[21] <= UInt<32>("h15") @[gpr.scala 16:42]
    _regs_WIRE[22] <= UInt<32>("h16") @[gpr.scala 16:42]
    _regs_WIRE[23] <= UInt<32>("h17") @[gpr.scala 16:42]
    _regs_WIRE[24] <= UInt<32>("h18") @[gpr.scala 16:42]
    _regs_WIRE[25] <= UInt<32>("h19") @[gpr.scala 16:42]
    _regs_WIRE[26] <= UInt<32>("h1a") @[gpr.scala 16:42]
    _regs_WIRE[27] <= UInt<32>("h1b") @[gpr.scala 16:42]
    _regs_WIRE[28] <= UInt<32>("h1c") @[gpr.scala 16:42]
    _regs_WIRE[29] <= UInt<32>("h1d") @[gpr.scala 16:42]
    _regs_WIRE[30] <= UInt<32>("h1e") @[gpr.scala 16:42]
    _regs_WIRE[31] <= UInt<32>("h1f") @[gpr.scala 16:42]
    reg regs : UInt<32>[32], clock with :
      reset => (reset, _regs_WIRE) @[gpr.scala 16:21]
    node _reg_data_write_T = eq(io.rd_Req.bits.rd_addr, UInt<1>("h0")) @[gpr.scala 19:51]
    node reg_data_write = mux(_reg_data_write_T, UInt<1>("h0"), io.rd_Req.bits.rd_data) @[gpr.scala 19:27]
    node _regs_T = mux(io.rd_Req.valid, reg_data_write, regs[io.rd_Req.bits.rd_addr]) @[gpr.scala 20:38]
    regs[io.rd_Req.bits.rd_addr] <= _regs_T @[gpr.scala 20:32]
    io.rdata_rs1 <= regs[io.raddr_rs1] @[gpr.scala 23:16]
    io.rdata_rs2 <= regs[io.raddr_rs2] @[gpr.scala 24:16]
    io.rd_Req.ready <= UInt<1>("h1") @[gpr.scala 26:19]

  module mem :
    input clock : Clock
    input reset : Reset
    output io : { flip inst : UInt<32>, flip rs1 : UInt<32>, flip rs2 : UInt<32>, flip imm : UInt<32>, mem_data : UInt<32>}

    node _io_mem_data_T = and(io.inst, io.rs1) @[mem.scala 13:27]
    node _io_mem_data_T_1 = or(io.rs2, io.imm) @[mem.scala 13:47]
    node _io_mem_data_T_2 = xor(_io_mem_data_T, _io_mem_data_T_1) @[mem.scala 13:37]
    io.mem_data <= _io_mem_data_T_2 @[mem.scala 13:15]

  module data_control :
    input clock : Clock
    input reset : Reset
    output io : { flip sw : UInt<4>, flip rd_addr : UInt<5>, flip rs1_data : UInt<32>, flip rs2_data : UInt<32>, flip instruction : UInt<32>, flip pc_next_type : UInt<4>, flip imm : UInt<32>, flip mem_data : UInt<32>, flip pc_count : UInt<32>, flip data_control : UInt<3>, alu_Req : { flip ready : UInt<1>, valid : UInt<1>, bits : { data1 : UInt<32>, data2 : UInt<32>, sw : UInt<4>, addr : UInt<5>, rs1_data : UInt<32>, rs2_data : UInt<32>, instruction : UInt<32>, pc_next_type : UInt<4>, pc_count : UInt<32>}}}

    reg datactrl_state : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[data_control.scala 20:31]
    node control1 = eq(io.data_control, UInt<1>("h1")) @[data_control.scala 28:34]
    node control2 = eq(io.data_control, UInt<2>("h2")) @[data_control.scala 29:34]
    node control3 = eq(io.data_control, UInt<2>("h3")) @[data_control.scala 30:34]
    node _io_alu_Req_bits_data1_T = mux(control2, io.mem_data, io.rs1_data) @[Mux.scala 101:16]
    node _io_alu_Req_bits_data1_T_1 = mux(control1, io.pc_count, _io_alu_Req_bits_data1_T) @[Mux.scala 101:16]
    io.alu_Req.bits.data1 <= _io_alu_Req_bits_data1_T_1 @[data_control.scala 34:25]
    node _io_alu_Req_bits_data2_T = mux(control3, io.rs2_data, io.imm) @[Mux.scala 101:16]
    node _io_alu_Req_bits_data2_T_1 = mux(control2, UInt<32>("h0"), _io_alu_Req_bits_data2_T) @[Mux.scala 101:16]
    io.alu_Req.bits.data2 <= _io_alu_Req_bits_data2_T_1 @[data_control.scala 39:25]
    io.alu_Req.bits.sw <= io.sw @[data_control.scala 44:22]
    io.alu_Req.bits.addr <= io.rd_addr @[data_control.scala 45:24]
    io.alu_Req.bits.rs1_data <= io.rs1_data @[data_control.scala 47:28]
    io.alu_Req.bits.rs2_data <= io.rs2_data @[data_control.scala 48:28]
    io.alu_Req.bits.instruction <= io.instruction @[data_control.scala 49:31]
    io.alu_Req.bits.pc_next_type <= io.pc_next_type @[data_control.scala 50:32]
    io.alu_Req.bits.pc_count <= io.pc_count @[data_control.scala 51:28]
    node _datactrl_state_T = mux(io.alu_Req.ready, UInt<1>("h0"), UInt<1>("h1")) @[data_control.scala 57:22]
    node _datactrl_state_T_1 = eq(UInt<1>("h1"), datactrl_state) @[Mux.scala 81:61]
    node _datactrl_state_T_2 = mux(_datactrl_state_T_1, _datactrl_state_T, UInt<1>("h1")) @[Mux.scala 81:58]
    datactrl_state <= _datactrl_state_T_2 @[data_control.scala 55:18]
    node _io_alu_Req_valid_T = eq(datactrl_state, UInt<1>("h1")) @[data_control.scala 59:39]
    io.alu_Req.valid <= _io_alu_Req_valid_T @[data_control.scala 59:20]

  module alu :
    input clock : Clock
    input reset : Reset
    output io : { flip alu_Req : { flip ready : UInt<1>, valid : UInt<1>, bits : { data1 : UInt<32>, data2 : UInt<32>, sw : UInt<4>, addr : UInt<5>, rs1_data : UInt<32>, rs2_data : UInt<32>, instruction : UInt<32>, pc_next_type : UInt<4>, pc_count : UInt<32>}}, rd_Req : { flip ready : UInt<1>, valid : UInt<1>, bits : { rd_addr : UInt<5>, rd_data : UInt<32>}}, pcnext_Req : { flip ready : UInt<1>, valid : UInt<1>, bits : { rs1_data : UInt<32>, rs2_data : UInt<32>, instruction : UInt<32>, pc_next_type : UInt<4>, pc_count : UInt<32>}}, carry : UInt<1>, overflow : UInt<1>}

    reg state : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[alu.scala 14:22]
    reg out_reg : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[alu.scala 17:29]
    reg carry_reg : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[alu.scala 18:29]
    reg overflow_reg : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[alu.scala 19:29]
    reg rd_addr_reg : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[alu.scala 20:28]
    reg rs1_data_reg : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[alu.scala 22:29]
    reg rs2_data_reg : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[alu.scala 23:29]
    reg instruction_reg : UInt<32>, clock with :
      reset => (reset, UInt<32>("h413")) @[alu.scala 24:32]
    reg pc_next_type_reg : UInt<4>, clock with :
      reset => (reset, UInt<4>("h0")) @[alu.scala 25:33]
    reg pc_count_reg : UInt<32>, clock with :
      reset => (reset, UInt<32>("h413")) @[alu.scala 26:29]
    node oneHot_shiftAmount = bits(io.alu_Req.bits.sw, 3, 0) @[OneHot.scala 63:49]
    node _oneHot_T = dshl(UInt<1>("h1"), oneHot_shiftAmount) @[OneHot.scala 64:12]
    node oneHot = bits(_oneHot_T, 15, 0) @[OneHot.scala 64:27]
    node add33 = add(io.alu_Req.bits.data1, io.alu_Req.bits.data2) @[alu.scala 32:39]
    node _sub33_T = sub(io.alu_Req.bits.data1, io.alu_Req.bits.data2) @[alu.scala 33:39]
    node sub33 = asUInt(_sub33_T) @[alu.scala 33:39]
    node and32 = and(io.alu_Req.bits.data1, io.alu_Req.bits.data2) @[alu.scala 34:39]
    node or32 = or(io.alu_Req.bits.data1, io.alu_Req.bits.data2) @[alu.scala 35:39]
    node xor32 = xor(io.alu_Req.bits.data1, io.alu_Req.bits.data2) @[alu.scala 36:39]
    node _srai32_T = asSInt(io.alu_Req.bits.data1) @[alu.scala 37:39]
    node _srai32_T_1 = bits(io.alu_Req.bits.data2, 4, 0) @[alu.scala 37:70]
    node _srai32_T_2 = dshr(_srai32_T, _srai32_T_1) @[alu.scala 37:46]
    node srai32 = asUInt(_srai32_T_2) @[alu.scala 37:77]
    node _srli32_T = bits(io.alu_Req.bits.data2, 4, 0) @[alu.scala 38:63]
    node srli32 = dshr(io.alu_Req.bits.data1, _srli32_T) @[alu.scala 38:39]
    node _sll32_T = bits(io.alu_Req.bits.data2, 4, 0) @[alu.scala 40:63]
    node sll32 = dshl(io.alu_Req.bits.data1, _sll32_T) @[alu.scala 40:39]
    node sltiu_b = lt(io.alu_Req.bits.data1, io.alu_Req.bits.data2) @[alu.scala 41:40]
    node _slt_b_T = asSInt(io.alu_Req.bits.data1) @[alu.scala 42:40]
    node _slt_b_T_1 = asSInt(io.alu_Req.bits.data2) @[alu.scala 42:71]
    node slt_b = lt(_slt_b_T, _slt_b_T_1) @[alu.scala 42:47]
    node _out33_T = bits(oneHot, 0, 0) @[alu.scala 49:11]
    node _out33_T_1 = bits(oneHot, 1, 1) @[alu.scala 50:11]
    node _out33_T_2 = bits(oneHot, 2, 2) @[alu.scala 51:11]
    node _out33_T_3 = cat(UInt<32>("h0"), sltiu_b) @[Cat.scala 31:58]
    node _out33_T_4 = bits(oneHot, 3, 3) @[alu.scala 52:11]
    node _out33_T_5 = cat(UInt<1>("h0"), or32) @[Cat.scala 31:58]
    node _out33_T_6 = bits(oneHot, 4, 4) @[alu.scala 53:11]
    node _out33_T_7 = cat(UInt<1>("h0"), xor32) @[Cat.scala 31:58]
    node _out33_T_8 = bits(oneHot, 5, 5) @[alu.scala 54:11]
    node _out33_T_9 = cat(UInt<1>("h0"), srai32) @[Cat.scala 31:58]
    node _out33_T_10 = bits(oneHot, 6, 6) @[alu.scala 55:11]
    node _out33_T_11 = cat(UInt<1>("h0"), and32) @[Cat.scala 31:58]
    node _out33_T_12 = bits(oneHot, 7, 7) @[alu.scala 56:11]
    node _out33_T_13 = bits(oneHot, 8, 8) @[alu.scala 57:11]
    node _out33_T_14 = cat(UInt<1>("h0"), sll32) @[Cat.scala 31:58]
    node _out33_T_15 = bits(oneHot, 9, 9) @[alu.scala 58:11]
    node _out33_T_16 = cat(UInt<1>("h0"), srli32) @[Cat.scala 31:58]
    node _out33_T_17 = bits(oneHot, 10, 10) @[alu.scala 59:11]
    node _out33_T_18 = cat(UInt<32>("h0"), slt_b) @[Cat.scala 31:58]
    node _out33_T_19 = bits(oneHot, 11, 11) @[alu.scala 60:11]
    node _out33_T_20 = bits(oneHot, 12, 12) @[alu.scala 61:11]
    node _out33_T_21 = bits(oneHot, 13, 13) @[alu.scala 62:11]
    node _out33_T_22 = bits(oneHot, 14, 14) @[alu.scala 63:11]
    node _out33_T_23 = bits(oneHot, 15, 15) @[alu.scala 64:11]
    node _out33_T_24 = mux(_out33_T, add33, UInt<1>("h0")) @[Mux.scala 27:73]
    node _out33_T_25 = mux(_out33_T_1, sub33, UInt<1>("h0")) @[Mux.scala 27:73]
    node _out33_T_26 = mux(_out33_T_2, _out33_T_3, UInt<1>("h0")) @[Mux.scala 27:73]
    node _out33_T_27 = mux(_out33_T_4, _out33_T_5, UInt<1>("h0")) @[Mux.scala 27:73]
    node _out33_T_28 = mux(_out33_T_6, _out33_T_7, UInt<1>("h0")) @[Mux.scala 27:73]
    node _out33_T_29 = mux(_out33_T_8, _out33_T_9, UInt<1>("h0")) @[Mux.scala 27:73]
    node _out33_T_30 = mux(_out33_T_10, _out33_T_11, UInt<1>("h0")) @[Mux.scala 27:73]
    node _out33_T_31 = mux(_out33_T_12, UInt<33>("h0"), UInt<1>("h0")) @[Mux.scala 27:73]
    node _out33_T_32 = mux(_out33_T_13, _out33_T_14, UInt<1>("h0")) @[Mux.scala 27:73]
    node _out33_T_33 = mux(_out33_T_15, _out33_T_16, UInt<1>("h0")) @[Mux.scala 27:73]
    node _out33_T_34 = mux(_out33_T_17, _out33_T_18, UInt<1>("h0")) @[Mux.scala 27:73]
    node _out33_T_35 = mux(_out33_T_19, UInt<33>("h0"), UInt<1>("h0")) @[Mux.scala 27:73]
    node _out33_T_36 = mux(_out33_T_20, UInt<33>("h0"), UInt<1>("h0")) @[Mux.scala 27:73]
    node _out33_T_37 = mux(_out33_T_21, UInt<33>("h0"), UInt<1>("h0")) @[Mux.scala 27:73]
    node _out33_T_38 = mux(_out33_T_22, UInt<33>("h0"), UInt<1>("h0")) @[Mux.scala 27:73]
    node _out33_T_39 = mux(_out33_T_23, UInt<33>("h0"), UInt<1>("h0")) @[Mux.scala 27:73]
    node _out33_T_40 = or(_out33_T_24, _out33_T_25) @[Mux.scala 27:73]
    node _out33_T_41 = or(_out33_T_40, _out33_T_26) @[Mux.scala 27:73]
    node _out33_T_42 = or(_out33_T_41, _out33_T_27) @[Mux.scala 27:73]
    node _out33_T_43 = or(_out33_T_42, _out33_T_28) @[Mux.scala 27:73]
    node _out33_T_44 = or(_out33_T_43, _out33_T_29) @[Mux.scala 27:73]
    node _out33_T_45 = or(_out33_T_44, _out33_T_30) @[Mux.scala 27:73]
    node _out33_T_46 = or(_out33_T_45, _out33_T_31) @[Mux.scala 27:73]
    node _out33_T_47 = or(_out33_T_46, _out33_T_32) @[Mux.scala 27:73]
    node _out33_T_48 = or(_out33_T_47, _out33_T_33) @[Mux.scala 27:73]
    node _out33_T_49 = or(_out33_T_48, _out33_T_34) @[Mux.scala 27:73]
    node _out33_T_50 = or(_out33_T_49, _out33_T_35) @[Mux.scala 27:73]
    node _out33_T_51 = or(_out33_T_50, _out33_T_36) @[Mux.scala 27:73]
    node _out33_T_52 = or(_out33_T_51, _out33_T_37) @[Mux.scala 27:73]
    node _out33_T_53 = or(_out33_T_52, _out33_T_38) @[Mux.scala 27:73]
    node _out33_T_54 = or(_out33_T_53, _out33_T_39) @[Mux.scala 27:73]
    wire out33 : UInt<64> @[Mux.scala 27:73]
    out33 <= _out33_T_54 @[Mux.scala 27:73]
    node _out_reg_T = bits(out33, 31, 0) @[alu.scala 68:45]
    node _out_reg_T_1 = mux(io.alu_Req.valid, _out_reg_T, out_reg) @[alu.scala 68:19]
    out_reg <= _out_reg_T_1 @[alu.scala 68:13]
    node _rd_addr_reg_T = mux(io.alu_Req.valid, io.alu_Req.bits.addr, rd_addr_reg) @[alu.scala 69:21]
    rd_addr_reg <= _rd_addr_reg_T @[alu.scala 69:15]
    node _carry_reg_T = bits(out33, 32, 32) @[alu.scala 70:45]
    node _carry_reg_T_1 = mux(io.alu_Req.valid, _carry_reg_T, out_reg) @[alu.scala 70:19]
    carry_reg <= _carry_reg_T_1 @[alu.scala 70:13]
    node _rs1_data_reg_T = mux(io.alu_Req.valid, io.alu_Req.bits.rs1_data, rs1_data_reg) @[alu.scala 72:22]
    rs1_data_reg <= _rs1_data_reg_T @[alu.scala 72:16]
    node _rs2_data_reg_T = mux(io.alu_Req.valid, io.alu_Req.bits.rs2_data, rs2_data_reg) @[alu.scala 73:22]
    rs2_data_reg <= _rs2_data_reg_T @[alu.scala 73:16]
    node _instruction_reg_T = mux(io.alu_Req.valid, io.alu_Req.bits.instruction, instruction_reg) @[alu.scala 74:25]
    instruction_reg <= _instruction_reg_T @[alu.scala 74:19]
    node _pc_next_type_reg_T = mux(io.alu_Req.valid, io.alu_Req.bits.pc_next_type, pc_next_type_reg) @[alu.scala 75:26]
    pc_next_type_reg <= _pc_next_type_reg_T @[alu.scala 75:20]
    node _pc_count_reg_T = mux(io.alu_Req.valid, io.alu_Req.bits.pc_count, pc_count_reg) @[alu.scala 76:22]
    pc_count_reg <= _pc_count_reg_T @[alu.scala 76:16]
    node a31 = bits(io.alu_Req.bits.data1, 31, 31) @[alu.scala 79:34]
    node b31 = bits(io.alu_Req.bits.data2, 31, 31) @[alu.scala 80:34]
    node s31 = bits(out33, 31, 31) @[alu.scala 81:18]
    node _overflowAddBool_T = xor(a31, s31) @[alu.scala 84:30]
    node _overflowAddBool_T_1 = xor(a31, b31) @[alu.scala 84:45]
    node _overflowAddBool_T_2 = eq(_overflowAddBool_T_1, UInt<1>("h0")) @[alu.scala 84:39]
    node overflowAddBool = and(_overflowAddBool_T, _overflowAddBool_T_2) @[alu.scala 84:37]
    node _overflowSubBool_T = xor(a31, s31) @[alu.scala 85:30]
    node _overflowSubBool_T_1 = xor(a31, b31) @[alu.scala 85:45]
    node overflowSubBool = and(_overflowSubBool_T, _overflowSubBool_T_1) @[alu.scala 85:37]
    node _overflow_rego_T = bits(oneHot, 0, 0) @[alu.scala 89:11]
    node _overflow_rego_T_1 = bits(oneHot, 1, 1) @[alu.scala 90:11]
    node _overflow_rego_T_2 = bits(oneHot, 2, 2) @[alu.scala 91:11]
    node _overflow_rego_T_3 = bits(oneHot, 3, 3) @[alu.scala 92:11]
    node _overflow_rego_T_4 = bits(oneHot, 4, 4) @[alu.scala 93:11]
    node _overflow_rego_T_5 = bits(oneHot, 5, 5) @[alu.scala 94:11]
    node _overflow_rego_T_6 = bits(oneHot, 6, 6) @[alu.scala 95:11]
    node _overflow_rego_T_7 = bits(oneHot, 7, 7) @[alu.scala 96:11]
    node _overflow_rego_T_8 = bits(oneHot, 8, 8) @[alu.scala 97:11]
    node _overflow_rego_T_9 = bits(oneHot, 9, 9) @[alu.scala 98:11]
    node _overflow_rego_T_10 = bits(oneHot, 10, 10) @[alu.scala 99:11]
    node _overflow_rego_T_11 = bits(oneHot, 11, 11) @[alu.scala 100:11]
    node _overflow_rego_T_12 = bits(oneHot, 12, 12) @[alu.scala 101:11]
    node _overflow_rego_T_13 = bits(oneHot, 13, 13) @[alu.scala 102:11]
    node _overflow_rego_T_14 = bits(oneHot, 14, 14) @[alu.scala 103:11]
    node _overflow_rego_T_15 = bits(oneHot, 15, 15) @[alu.scala 104:11]
    node _overflow_rego_T_16 = mux(_overflow_rego_T, overflowAddBool, UInt<1>("h0")) @[Mux.scala 27:73]
    node _overflow_rego_T_17 = mux(_overflow_rego_T_1, overflowSubBool, UInt<1>("h0")) @[Mux.scala 27:73]
    node _overflow_rego_T_18 = mux(_overflow_rego_T_2, UInt<1>("h0"), UInt<1>("h0")) @[Mux.scala 27:73]
    node _overflow_rego_T_19 = mux(_overflow_rego_T_3, UInt<1>("h0"), UInt<1>("h0")) @[Mux.scala 27:73]
    node _overflow_rego_T_20 = mux(_overflow_rego_T_4, UInt<1>("h0"), UInt<1>("h0")) @[Mux.scala 27:73]
    node _overflow_rego_T_21 = mux(_overflow_rego_T_5, UInt<1>("h0"), UInt<1>("h0")) @[Mux.scala 27:73]
    node _overflow_rego_T_22 = mux(_overflow_rego_T_6, UInt<1>("h0"), UInt<1>("h0")) @[Mux.scala 27:73]
    node _overflow_rego_T_23 = mux(_overflow_rego_T_7, UInt<1>("h0"), UInt<1>("h0")) @[Mux.scala 27:73]
    node _overflow_rego_T_24 = mux(_overflow_rego_T_8, UInt<1>("h0"), UInt<1>("h0")) @[Mux.scala 27:73]
    node _overflow_rego_T_25 = mux(_overflow_rego_T_9, UInt<1>("h0"), UInt<1>("h0")) @[Mux.scala 27:73]
    node _overflow_rego_T_26 = mux(_overflow_rego_T_10, UInt<1>("h0"), UInt<1>("h0")) @[Mux.scala 27:73]
    node _overflow_rego_T_27 = mux(_overflow_rego_T_11, UInt<1>("h0"), UInt<1>("h0")) @[Mux.scala 27:73]
    node _overflow_rego_T_28 = mux(_overflow_rego_T_12, UInt<1>("h0"), UInt<1>("h0")) @[Mux.scala 27:73]
    node _overflow_rego_T_29 = mux(_overflow_rego_T_13, UInt<1>("h0"), UInt<1>("h0")) @[Mux.scala 27:73]
    node _overflow_rego_T_30 = mux(_overflow_rego_T_14, UInt<1>("h0"), UInt<1>("h0")) @[Mux.scala 27:73]
    node _overflow_rego_T_31 = mux(_overflow_rego_T_15, UInt<1>("h0"), UInt<1>("h0")) @[Mux.scala 27:73]
    node _overflow_rego_T_32 = or(_overflow_rego_T_16, _overflow_rego_T_17) @[Mux.scala 27:73]
    node _overflow_rego_T_33 = or(_overflow_rego_T_32, _overflow_rego_T_18) @[Mux.scala 27:73]
    node _overflow_rego_T_34 = or(_overflow_rego_T_33, _overflow_rego_T_19) @[Mux.scala 27:73]
    node _overflow_rego_T_35 = or(_overflow_rego_T_34, _overflow_rego_T_20) @[Mux.scala 27:73]
    node _overflow_rego_T_36 = or(_overflow_rego_T_35, _overflow_rego_T_21) @[Mux.scala 27:73]
    node _overflow_rego_T_37 = or(_overflow_rego_T_36, _overflow_rego_T_22) @[Mux.scala 27:73]
    node _overflow_rego_T_38 = or(_overflow_rego_T_37, _overflow_rego_T_23) @[Mux.scala 27:73]
    node _overflow_rego_T_39 = or(_overflow_rego_T_38, _overflow_rego_T_24) @[Mux.scala 27:73]
    node _overflow_rego_T_40 = or(_overflow_rego_T_39, _overflow_rego_T_25) @[Mux.scala 27:73]
    node _overflow_rego_T_41 = or(_overflow_rego_T_40, _overflow_rego_T_26) @[Mux.scala 27:73]
    node _overflow_rego_T_42 = or(_overflow_rego_T_41, _overflow_rego_T_27) @[Mux.scala 27:73]
    node _overflow_rego_T_43 = or(_overflow_rego_T_42, _overflow_rego_T_28) @[Mux.scala 27:73]
    node _overflow_rego_T_44 = or(_overflow_rego_T_43, _overflow_rego_T_29) @[Mux.scala 27:73]
    node _overflow_rego_T_45 = or(_overflow_rego_T_44, _overflow_rego_T_30) @[Mux.scala 27:73]
    node _overflow_rego_T_46 = or(_overflow_rego_T_45, _overflow_rego_T_31) @[Mux.scala 27:73]
    wire overflow_rego : UInt<1> @[Mux.scala 27:73]
    overflow_rego <= _overflow_rego_T_46 @[Mux.scala 27:73]
    node _state_T = mux(io.rd_Req.ready, UInt<1>("h0"), UInt<1>("h1")) @[alu.scala 109:22]
    node _state_T_1 = eq(UInt<1>("h1"), state) @[Mux.scala 81:61]
    node _state_T_2 = mux(_state_T_1, _state_T, UInt<1>("h1")) @[Mux.scala 81:58]
    state <= _state_T_2 @[alu.scala 107:9]
    node _overflow_reg_T = mux(io.alu_Req.valid, overflow_rego, overflow_reg) @[alu.scala 112:22]
    overflow_reg <= _overflow_reg_T @[alu.scala 112:16]
    node _io_rd_Req_valid_T = eq(state, UInt<1>("h1")) @[alu.scala 115:29]
    io.rd_Req.valid <= _io_rd_Req_valid_T @[alu.scala 115:19]
    io.rd_Req.bits.rd_data <= out_reg @[alu.scala 116:27]
    io.rd_Req.bits.rd_addr <= rd_addr_reg @[alu.scala 117:26]
    node _io_pcnext_Req_valid_T = eq(state, UInt<1>("h1")) @[alu.scala 119:33]
    io.pcnext_Req.valid <= _io_pcnext_Req_valid_T @[alu.scala 119:23]
    io.pcnext_Req.bits.rs1_data <= rs1_data_reg @[alu.scala 120:31]
    io.pcnext_Req.bits.rs2_data <= rs2_data_reg @[alu.scala 121:31]
    io.pcnext_Req.bits.instruction <= instruction_reg @[alu.scala 122:34]
    io.pcnext_Req.bits.pc_next_type <= pc_next_type_reg @[alu.scala 123:35]
    io.pcnext_Req.bits.pc_count <= pc_count_reg @[alu.scala 124:31]
    io.carry <= carry_reg @[alu.scala 126:15]
    io.overflow <= overflow_reg @[alu.scala 127:15]
    node _io_alu_Req_ready_T = eq(state, UInt<1>("h1")) @[alu.scala 129:30]
    io.alu_Req.ready <= _io_alu_Req_ready_T @[alu.scala 129:20]

  module pc_next :
    input clock : Clock
    input reset : Reset
    output io : { flip pcnext_Req : { flip ready : UInt<1>, valid : UInt<1>, bits : { rs1_data : UInt<32>, rs2_data : UInt<32>, instruction : UInt<32>, pc_next_type : UInt<4>, pc_count : UInt<32>}}, pc_next : UInt<32>, is_unknown_instruction : UInt<1>}

    reg pc_next_reg : UInt<32>, clock with :
      reset => (reset, UInt<32>("h413")) @[pc_next.scala 11:28]
    reg is_unknown_instruction_reg : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[pc_next.scala 12:43]
    node _default_pc_next_T = add(io.pcnext_Req.bits.pc_count, UInt<32>("h4")) @[pc_next.scala 14:53]
    node default_pc_next = tail(_default_pc_next_T, 1) @[pc_next.scala 14:53]
    node is_type1 = eq(io.pcnext_Req.bits.pc_next_type, UInt<1>("h1")) @[pc_next.scala 17:50]
    node is_type2 = eq(io.pcnext_Req.bits.pc_next_type, UInt<2>("h2")) @[pc_next.scala 18:50]
    node is_type3 = eq(io.pcnext_Req.bits.pc_next_type, UInt<2>("h3")) @[pc_next.scala 19:50]
    node is_type4 = eq(io.pcnext_Req.bits.pc_next_type, UInt<3>("h4")) @[pc_next.scala 20:50]
    node is_type5 = eq(io.pcnext_Req.bits.pc_next_type, UInt<3>("h5")) @[pc_next.scala 21:50]
    node is_type6 = eq(io.pcnext_Req.bits.pc_next_type, UInt<3>("h6")) @[pc_next.scala 22:50]
    node is_type7 = eq(io.pcnext_Req.bits.pc_next_type, UInt<3>("h7")) @[pc_next.scala 23:50]
    node is_type8 = eq(io.pcnext_Req.bits.pc_next_type, UInt<4>("h8")) @[pc_next.scala 24:50]
    node is_type9 = eq(io.pcnext_Req.bits.pc_next_type, UInt<4>("h9")) @[pc_next.scala 25:50]
    node is_type10 = eq(io.pcnext_Req.bits.pc_next_type, UInt<4>("ha")) @[pc_next.scala 26:50]
    node is_eql = eq(io.pcnext_Req.bits.rs1_data, io.pcnext_Req.bits.rs2_data) @[pc_next.scala 28:44]
    node _is_more_equ_T = asSInt(io.pcnext_Req.bits.rs1_data) @[pc_next.scala 29:49]
    node _is_more_equ_T_1 = asSInt(io.pcnext_Req.bits.rs2_data) @[pc_next.scala 29:87]
    node is_more_equ = geq(_is_more_equ_T, _is_more_equ_T_1) @[pc_next.scala 29:56]
    node _is_less_T = asSInt(io.pcnext_Req.bits.rs1_data) @[pc_next.scala 30:45]
    node _is_less_T_1 = asSInt(io.pcnext_Req.bits.rs2_data) @[pc_next.scala 30:82]
    node is_less = lt(_is_less_T, _is_less_T_1) @[pc_next.scala 30:52]
    node is_more_equ_u = geq(io.pcnext_Req.bits.rs1_data, io.pcnext_Req.bits.rs2_data) @[pc_next.scala 31:51]
    node is_less_u = lt(io.pcnext_Req.bits.rs1_data, io.pcnext_Req.bits.rs2_data) @[pc_next.scala 32:47]
    node _beq_result_T = bits(io.pcnext_Req.bits.instruction, 31, 31) @[pc_next.scala 36:89]
    node _beq_result_T_1 = bits(_beq_result_T, 0, 0) @[Bitwise.scala 74:15]
    node _beq_result_T_2 = mux(_beq_result_T_1, UInt<19>("h7ffff"), UInt<19>("h0")) @[Bitwise.scala 74:12]
    node _beq_result_T_3 = bits(io.pcnext_Req.bits.instruction, 31, 31) @[pc_next.scala 36:129]
    node _beq_result_T_4 = bits(io.pcnext_Req.bits.instruction, 7, 7) @[pc_next.scala 36:168]
    node _beq_result_T_5 = bits(io.pcnext_Req.bits.instruction, 30, 25) @[pc_next.scala 36:205]
    node _beq_result_T_6 = bits(io.pcnext_Req.bits.instruction, 11, 8) @[pc_next.scala 36:244]
    node beq_result_lo_hi = cat(_beq_result_T_5, _beq_result_T_6) @[Cat.scala 31:58]
    node beq_result_lo = cat(beq_result_lo_hi, UInt<1>("h0")) @[Cat.scala 31:58]
    node beq_result_hi_hi = cat(_beq_result_T_2, _beq_result_T_3) @[Cat.scala 31:58]
    node beq_result_hi = cat(beq_result_hi_hi, _beq_result_T_4) @[Cat.scala 31:58]
    node _beq_result_T_7 = cat(beq_result_hi, beq_result_lo) @[Cat.scala 31:58]
    node _beq_result_T_8 = add(io.pcnext_Req.bits.pc_count, _beq_result_T_7) @[pc_next.scala 36:44]
    node _beq_result_T_9 = tail(_beq_result_T_8, 1) @[pc_next.scala 36:44]
    node beq_result = mux(is_eql, _beq_result_T_9, default_pc_next) @[Mux.scala 101:16]
    node _bge_result_T = bits(io.pcnext_Req.bits.instruction, 31, 31) @[pc_next.scala 40:94]
    node _bge_result_T_1 = bits(_bge_result_T, 0, 0) @[Bitwise.scala 74:15]
    node _bge_result_T_2 = mux(_bge_result_T_1, UInt<19>("h7ffff"), UInt<19>("h0")) @[Bitwise.scala 74:12]
    node _bge_result_T_3 = bits(io.pcnext_Req.bits.instruction, 31, 31) @[pc_next.scala 40:134]
    node _bge_result_T_4 = bits(io.pcnext_Req.bits.instruction, 7, 7) @[pc_next.scala 40:173]
    node _bge_result_T_5 = bits(io.pcnext_Req.bits.instruction, 30, 25) @[pc_next.scala 40:210]
    node _bge_result_T_6 = bits(io.pcnext_Req.bits.instruction, 11, 8) @[pc_next.scala 40:249]
    node bge_result_lo_hi = cat(_bge_result_T_5, _bge_result_T_6) @[Cat.scala 31:58]
    node bge_result_lo = cat(bge_result_lo_hi, UInt<1>("h0")) @[Cat.scala 31:58]
    node bge_result_hi_hi = cat(_bge_result_T_2, _bge_result_T_3) @[Cat.scala 31:58]
    node bge_result_hi = cat(bge_result_hi_hi, _bge_result_T_4) @[Cat.scala 31:58]
    node _bge_result_T_7 = cat(bge_result_hi, bge_result_lo) @[Cat.scala 31:58]
    node _bge_result_T_8 = add(io.pcnext_Req.bits.pc_count, _bge_result_T_7) @[pc_next.scala 40:49]
    node _bge_result_T_9 = tail(_bge_result_T_8, 1) @[pc_next.scala 40:49]
    node bge_result = mux(is_more_equ, _bge_result_T_9, default_pc_next) @[Mux.scala 101:16]
    node _blt_result_T = bits(io.pcnext_Req.bits.instruction, 31, 31) @[pc_next.scala 44:90]
    node _blt_result_T_1 = bits(_blt_result_T, 0, 0) @[Bitwise.scala 74:15]
    node _blt_result_T_2 = mux(_blt_result_T_1, UInt<19>("h7ffff"), UInt<19>("h0")) @[Bitwise.scala 74:12]
    node _blt_result_T_3 = bits(io.pcnext_Req.bits.instruction, 31, 31) @[pc_next.scala 44:130]
    node _blt_result_T_4 = bits(io.pcnext_Req.bits.instruction, 7, 7) @[pc_next.scala 44:169]
    node _blt_result_T_5 = bits(io.pcnext_Req.bits.instruction, 30, 25) @[pc_next.scala 44:206]
    node _blt_result_T_6 = bits(io.pcnext_Req.bits.instruction, 11, 8) @[pc_next.scala 44:245]
    node blt_result_lo_hi = cat(_blt_result_T_5, _blt_result_T_6) @[Cat.scala 31:58]
    node blt_result_lo = cat(blt_result_lo_hi, UInt<1>("h0")) @[Cat.scala 31:58]
    node blt_result_hi_hi = cat(_blt_result_T_2, _blt_result_T_3) @[Cat.scala 31:58]
    node blt_result_hi = cat(blt_result_hi_hi, _blt_result_T_4) @[Cat.scala 31:58]
    node _blt_result_T_7 = cat(blt_result_hi, blt_result_lo) @[Cat.scala 31:58]
    node _blt_result_T_8 = add(io.pcnext_Req.bits.pc_count, _blt_result_T_7) @[pc_next.scala 44:45]
    node _blt_result_T_9 = tail(_blt_result_T_8, 1) @[pc_next.scala 44:45]
    node blt_result = mux(is_less, _blt_result_T_9, default_pc_next) @[Mux.scala 101:16]
    node _bltu_result_T = bits(io.pcnext_Req.bits.instruction, 31, 31) @[pc_next.scala 48:92]
    node _bltu_result_T_1 = bits(_bltu_result_T, 0, 0) @[Bitwise.scala 74:15]
    node _bltu_result_T_2 = mux(_bltu_result_T_1, UInt<19>("h7ffff"), UInt<19>("h0")) @[Bitwise.scala 74:12]
    node _bltu_result_T_3 = bits(io.pcnext_Req.bits.instruction, 31, 31) @[pc_next.scala 48:132]
    node _bltu_result_T_4 = bits(io.pcnext_Req.bits.instruction, 7, 7) @[pc_next.scala 48:171]
    node _bltu_result_T_5 = bits(io.pcnext_Req.bits.instruction, 30, 25) @[pc_next.scala 48:208]
    node _bltu_result_T_6 = bits(io.pcnext_Req.bits.instruction, 11, 8) @[pc_next.scala 48:247]
    node bltu_result_lo_hi = cat(_bltu_result_T_5, _bltu_result_T_6) @[Cat.scala 31:58]
    node bltu_result_lo = cat(bltu_result_lo_hi, UInt<1>("h0")) @[Cat.scala 31:58]
    node bltu_result_hi_hi = cat(_bltu_result_T_2, _bltu_result_T_3) @[Cat.scala 31:58]
    node bltu_result_hi = cat(bltu_result_hi_hi, _bltu_result_T_4) @[Cat.scala 31:58]
    node _bltu_result_T_7 = cat(bltu_result_hi, bltu_result_lo) @[Cat.scala 31:58]
    node _bltu_result_T_8 = add(io.pcnext_Req.bits.pc_count, _bltu_result_T_7) @[pc_next.scala 48:47]
    node _bltu_result_T_9 = tail(_bltu_result_T_8, 1) @[pc_next.scala 48:47]
    node bltu_result = mux(is_less_u, _bltu_result_T_9, default_pc_next) @[Mux.scala 101:16]
    node _bgeu_result_T = bits(io.pcnext_Req.bits.instruction, 31, 31) @[pc_next.scala 52:96]
    node _bgeu_result_T_1 = bits(_bgeu_result_T, 0, 0) @[Bitwise.scala 74:15]
    node _bgeu_result_T_2 = mux(_bgeu_result_T_1, UInt<19>("h7ffff"), UInt<19>("h0")) @[Bitwise.scala 74:12]
    node _bgeu_result_T_3 = bits(io.pcnext_Req.bits.instruction, 31, 31) @[pc_next.scala 52:136]
    node _bgeu_result_T_4 = bits(io.pcnext_Req.bits.instruction, 7, 7) @[pc_next.scala 52:175]
    node _bgeu_result_T_5 = bits(io.pcnext_Req.bits.instruction, 30, 25) @[pc_next.scala 52:212]
    node _bgeu_result_T_6 = bits(io.pcnext_Req.bits.instruction, 11, 8) @[pc_next.scala 52:251]
    node bgeu_result_lo_hi = cat(_bgeu_result_T_5, _bgeu_result_T_6) @[Cat.scala 31:58]
    node bgeu_result_lo = cat(bgeu_result_lo_hi, UInt<1>("h0")) @[Cat.scala 31:58]
    node bgeu_result_hi_hi = cat(_bgeu_result_T_2, _bgeu_result_T_3) @[Cat.scala 31:58]
    node bgeu_result_hi = cat(bgeu_result_hi_hi, _bgeu_result_T_4) @[Cat.scala 31:58]
    node _bgeu_result_T_7 = cat(bgeu_result_hi, bgeu_result_lo) @[Cat.scala 31:58]
    node _bgeu_result_T_8 = add(io.pcnext_Req.bits.pc_count, _bgeu_result_T_7) @[pc_next.scala 52:51]
    node _bgeu_result_T_9 = tail(_bgeu_result_T_8, 1) @[pc_next.scala 52:51]
    node bgeu_result = mux(is_more_equ_u, _bgeu_result_T_9, default_pc_next) @[Mux.scala 101:16]
    node _bne_result_T = eq(is_eql, UInt<1>("h0")) @[pc_next.scala 56:5]
    node _bne_result_T_1 = bits(io.pcnext_Req.bits.instruction, 31, 31) @[pc_next.scala 56:90]
    node _bne_result_T_2 = bits(_bne_result_T_1, 0, 0) @[Bitwise.scala 74:15]
    node _bne_result_T_3 = mux(_bne_result_T_2, UInt<19>("h7ffff"), UInt<19>("h0")) @[Bitwise.scala 74:12]
    node _bne_result_T_4 = bits(io.pcnext_Req.bits.instruction, 31, 31) @[pc_next.scala 56:130]
    node _bne_result_T_5 = bits(io.pcnext_Req.bits.instruction, 7, 7) @[pc_next.scala 56:169]
    node _bne_result_T_6 = bits(io.pcnext_Req.bits.instruction, 30, 25) @[pc_next.scala 56:206]
    node _bne_result_T_7 = bits(io.pcnext_Req.bits.instruction, 11, 8) @[pc_next.scala 56:245]
    node bne_result_lo_hi = cat(_bne_result_T_6, _bne_result_T_7) @[Cat.scala 31:58]
    node bne_result_lo = cat(bne_result_lo_hi, UInt<1>("h0")) @[Cat.scala 31:58]
    node bne_result_hi_hi = cat(_bne_result_T_3, _bne_result_T_4) @[Cat.scala 31:58]
    node bne_result_hi = cat(bne_result_hi_hi, _bne_result_T_5) @[Cat.scala 31:58]
    node _bne_result_T_8 = cat(bne_result_hi, bne_result_lo) @[Cat.scala 31:58]
    node _bne_result_T_9 = add(io.pcnext_Req.bits.pc_count, _bne_result_T_8) @[pc_next.scala 56:45]
    node _bne_result_T_10 = tail(_bne_result_T_9, 1) @[pc_next.scala 56:45]
    node bne_result = mux(_bne_result_T, _bne_result_T_10, default_pc_next) @[Mux.scala 101:16]
    node _pc_nexto_T = bits(io.pcnext_Req.bits.instruction, 31, 31) @[pc_next.scala 60:91]
    node _pc_nexto_T_1 = bits(_pc_nexto_T, 0, 0) @[Bitwise.scala 74:15]
    node _pc_nexto_T_2 = mux(_pc_nexto_T_1, UInt<11>("h7ff"), UInt<11>("h0")) @[Bitwise.scala 74:12]
    node _pc_nexto_T_3 = bits(io.pcnext_Req.bits.instruction, 31, 31) @[pc_next.scala 60:131]
    node _pc_nexto_T_4 = bits(io.pcnext_Req.bits.instruction, 19, 12) @[pc_next.scala 60:170]
    node _pc_nexto_T_5 = bits(io.pcnext_Req.bits.instruction, 20, 20) @[pc_next.scala 60:209]
    node _pc_nexto_T_6 = bits(io.pcnext_Req.bits.instruction, 30, 21) @[pc_next.scala 60:245]
    node pc_nexto_lo_hi = cat(_pc_nexto_T_5, _pc_nexto_T_6) @[Cat.scala 31:58]
    node pc_nexto_lo = cat(pc_nexto_lo_hi, UInt<1>("h0")) @[Cat.scala 31:58]
    node pc_nexto_hi_hi = cat(_pc_nexto_T_2, _pc_nexto_T_3) @[Cat.scala 31:58]
    node pc_nexto_hi = cat(pc_nexto_hi_hi, _pc_nexto_T_4) @[Cat.scala 31:58]
    node _pc_nexto_T_7 = cat(pc_nexto_hi, pc_nexto_lo) @[Cat.scala 31:58]
    node _pc_nexto_T_8 = add(io.pcnext_Req.bits.pc_count, _pc_nexto_T_7) @[pc_next.scala 60:46]
    node _pc_nexto_T_9 = tail(_pc_nexto_T_8, 1) @[pc_next.scala 60:46]
    node _pc_nexto_T_10 = bits(io.pcnext_Req.bits.instruction, 31, 31) @[pc_next.scala 61:92]
    node _pc_nexto_T_11 = bits(_pc_nexto_T_10, 0, 0) @[Bitwise.scala 74:15]
    node _pc_nexto_T_12 = mux(_pc_nexto_T_11, UInt<20>("hfffff"), UInt<20>("h0")) @[Bitwise.scala 74:12]
    node _pc_nexto_T_13 = bits(io.pcnext_Req.bits.instruction, 31, 20) @[pc_next.scala 61:132]
    node _pc_nexto_T_14 = cat(_pc_nexto_T_12, _pc_nexto_T_13) @[Cat.scala 31:58]
    node _pc_nexto_T_15 = add(io.pcnext_Req.bits.rs1_data, _pc_nexto_T_14) @[pc_next.scala 61:47]
    node _pc_nexto_T_16 = tail(_pc_nexto_T_15, 1) @[pc_next.scala 61:47]
    node _pc_nexto_T_17 = not(UInt<32>("h1")) @[pc_next.scala 61:145]
    node _pc_nexto_T_18 = and(_pc_nexto_T_16, _pc_nexto_T_17) @[pc_next.scala 61:142]
    node _pc_nexto_T_19 = mux(is_type10, bltu_result, default_pc_next) @[Mux.scala 101:16]
    node _pc_nexto_T_20 = mux(is_type9, blt_result, _pc_nexto_T_19) @[Mux.scala 101:16]
    node _pc_nexto_T_21 = mux(is_type8, bgeu_result, _pc_nexto_T_20) @[Mux.scala 101:16]
    node _pc_nexto_T_22 = mux(is_type7, bge_result, _pc_nexto_T_21) @[Mux.scala 101:16]
    node _pc_nexto_T_23 = mux(is_type5, bne_result, _pc_nexto_T_22) @[Mux.scala 101:16]
    node _pc_nexto_T_24 = mux(is_type6, beq_result, _pc_nexto_T_23) @[Mux.scala 101:16]
    node _pc_nexto_T_25 = mux(is_type4, io.pcnext_Req.bits.pc_count, _pc_nexto_T_24) @[Mux.scala 101:16]
    node _pc_nexto_T_26 = mux(is_type2, _pc_nexto_T_18, _pc_nexto_T_25) @[Mux.scala 101:16]
    node pc_nexto = mux(is_type1, _pc_nexto_T_9, _pc_nexto_T_26) @[Mux.scala 101:16]
    node is_unknown_instructiono = mux(is_type3, UInt<1>("h1"), UInt<1>("h0")) @[Mux.scala 101:16]
    node _pc_next_reg_T = mux(io.pcnext_Req.valid, pc_nexto, pc_next_reg) @[pc_next.scala 75:21]
    pc_next_reg <= _pc_next_reg_T @[pc_next.scala 75:15]
    node _is_unknown_instruction_reg_T = mux(io.pcnext_Req.valid, is_unknown_instructiono, is_unknown_instruction_reg) @[pc_next.scala 76:36]
    is_unknown_instruction_reg <= _is_unknown_instruction_reg_T @[pc_next.scala 76:30]
    io.pc_next <= pc_next_reg @[pc_next.scala 78:14]
    io.is_unknown_instruction <= is_unknown_instruction_reg @[pc_next.scala 79:29]
    io.pcnext_Req.ready <= UInt<1>("h1") @[pc_next.scala 81:23]

  module top :
    input clock : Clock
    input reset : UInt<1>
    output io : { flip addr_in : UInt<32>, pc_next : UInt<32>, is_unknown_instruction : UInt<1>}

    inst a_addr_gen of addr_gen @[top.scala 12:27]
    a_addr_gen.clock <= clock
    a_addr_gen.reset <= reset
    inst b_ifu of IFU @[top.scala 13:22]
    b_ifu.clock <= clock
    b_ifu.reset <= reset
    inst c_sram of SRAM @[top.scala 14:22]
    c_sram.clock <= clock
    c_sram.reset <= reset
    inst d_idu of IDU @[top.scala 15:21]
    d_idu.clock <= clock
    d_idu.reset <= reset
    inst e_imm of imm @[top.scala 16:21]
    e_imm.clock <= clock
    e_imm.reset <= reset
    inst f_gpr of gpr @[top.scala 17:21]
    f_gpr.clock <= clock
    f_gpr.reset <= reset
    inst g_mem of mem @[top.scala 18:21]
    g_mem.clock <= clock
    g_mem.reset <= reset
    inst h_data_control of data_control @[top.scala 19:30]
    h_data_control.clock <= clock
    h_data_control.reset <= reset
    inst i_alu of alu @[top.scala 20:21]
    i_alu.clock <= clock
    i_alu.reset <= reset
    inst j_pc_next of pc_next @[top.scala 21:25]
    j_pc_next.clock <= clock
    j_pc_next.reset <= reset
    a_addr_gen.io.addr_in <= io.addr_in @[top.scala 23:25]
    b_ifu.io.addr_Req <= a_addr_gen.io.IFUReq @[top.scala 24:24]
    c_sram.io.req <= b_ifu.io.sramReq @[top.scala 26:20]
    d_idu.io.inst_req <= c_sram.io.iduReq @[top.scala 28:20]
    e_imm.io.instruction <= d_idu.io.instruction_o @[top.scala 30:24]
    e_imm.io.imm_type <= d_idu.io.imm_type @[top.scala 31:21]
    f_gpr.io.raddr_rs1 <= d_idu.io.rs1 @[top.scala 33:22]
    f_gpr.io.raddr_rs2 <= d_idu.io.rs2 @[top.scala 34:22]
    g_mem.io.inst <= d_idu.io.instruction_o @[top.scala 36:17]
    g_mem.io.rs1 <= f_gpr.io.rdata_rs1 @[top.scala 37:16]
    g_mem.io.rs2 <= f_gpr.io.rdata_rs2 @[top.scala 38:16]
    g_mem.io.imm <= e_imm.io.imm @[top.scala 39:16]
    h_data_control.io.rd_addr <= d_idu.io.rd @[top.scala 41:29]
    h_data_control.io.rs1_data <= f_gpr.io.rdata_rs1 @[top.scala 42:30]
    h_data_control.io.rs2_data <= f_gpr.io.rdata_rs2 @[top.scala 43:30]
    h_data_control.io.imm <= e_imm.io.imm @[top.scala 44:25]
    h_data_control.io.sw <= d_idu.io.ALU_ctrl @[top.scala 45:24]
    h_data_control.io.mem_data <= g_mem.io.mem_data @[top.scala 46:30]
    h_data_control.io.data_control <= d_idu.io.data_control @[top.scala 47:34]
    h_data_control.io.pc_count <= d_idu.io.pc_o @[top.scala 48:30]
    h_data_control.io.pc_next_type <= d_idu.io.pc_next_type @[top.scala 49:34]
    h_data_control.io.instruction <= d_idu.io.instruction_o @[top.scala 50:33]
    i_alu.io.alu_Req <= h_data_control.io.alu_Req @[top.scala 52:20]
    j_pc_next.io.pcnext_Req <= i_alu.io.pcnext_Req @[top.scala 54:27]
    f_gpr.io.rd_Req <= i_alu.io.rd_Req @[top.scala 56:19]
    io.pc_next <= j_pc_next.io.pc_next @[top.scala 58:14]
    io.is_unknown_instruction <= j_pc_next.io.is_unknown_instruction @[top.scala 59:29]

